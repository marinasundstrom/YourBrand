@page "/Cases/create"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@inject ICasesClient CasesClient
@inject NavigationManager NavigationManager

<AppPageTitle>New Case</AppPageTitle>

<MudText Typo="Typo.h3" Class="mb-4">New Case</MudText>

<MudPaper Class="pa-4" Elevation="25">
    <EditForm Model="@this" OnValidSubmit="Submit">
            <DataAnnotationsValidator></DataAnnotationsValidator>

            <MudGrid>
                <MudItem xs="12" md="6">
                    <MudTextField Label="Description" Variant="Variant.Outlined" Class="mb-4" @bind-Value="Description" For="() => Description"></MudTextField>
                </MudItem>
            </MudGrid>

            <MudGrid>
                <MudItem xs="12" md="6">
                    <OrganizationSelector Variant="Variant.Outlined" @bind-Value="Organization" For="() => Organization" />
                </MudItem>

                <MudItem xs="12" md="6">
                    <CustomerSelector Variant="Variant.Outlined" @bind-Value="Customer" For="() => Customer" />
                </MudItem>

                <MudItem xs="12" md="6">
                    <CompetenceAreaSelector Variant="Variant.Outlined" @bind-Value="CompetenceArea" For="() => CompetenceArea" />
                </MudItem>

                <MudItem xs="12" md="6">
                    <PersonProfileSelector Variant="Variant.Outlined" @bind-Value="Profile" For="() => Profile" />
                </MudItem>

            </MudGrid>

            <MudText Typo="Typo.h4" Class="mt-8 mb-4">Pricing</MudText>

            <MudGrid>

                <MudItem xs="12" md="6">
                    <MudNumericField Label="Hourly price" Variant="Variant.Outlined" Class="mb-4" @bind-Value="HourlyPrice"
                        For="() => HourlyPrice"></MudNumericField>
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudNumericField Label="Hours" Variant="Variant.Outlined" Class="mb-4" @bind-Value="Hours"
                        For="() => Hours"></MudNumericField>
                </MudItem>

                <MudItem xs="12" md="6">
                <MudField Label="Total" Variant="Variant.Outlined" Class="mb-4">@Total.FormatCurrency(Currency)
                </MudField>
                </MudItem>
            </MudGrid>

            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-4">Create</MudButton>
    </EditForm>
</MudPaper>

@code {
    string Currency = "SEK";

    [Required]
    public string Description { get; set; } = null!;

    public string? DisplayName { get; set; }


    [Required]
    public YourBrand.Customers.Client.Customer? Customer { get; set; }


    //[Required]
    public Organization? Organization { get; set; }

    //[Required]
    public CompetenceArea? CompetenceArea { get; set; }

    public PersonProfile? Profile { get; set; }

    public decimal? HourlyPrice { get; set; }

    public double? Hours { get; set; }

    public decimal Total => HourlyPrice.GetValueOrDefault() * (decimal)Hours.GetValueOrDefault();

    private async Task Submit()
    {
        var dto = await CasesClient.CreateCaseAsync(new CreateCase {
            OrganizationId = Organization!.Id,
            Description = Description,
            PersonProfileId = Profile?.Id,
            Pricing = new UpdatePricing {
                HourlyPrice = HourlyPrice,
                Hours = Hours
            }
        });

       NavigationManager.NavigateTo($"/Cases/{dto.Id}");
    }
}