<div class="d-flex @(!Mini ? "mt-4" : string.Empty)">

    @if (!Mini) 
    {
    <div class="col-logo">
        <Logo Src="@Assignment.Company.Logo" Alt="@($"{Assignment.Company.Name} logo")" Class="me-4"
            Href="@Assignment.Company.Link" />
    </div>
    }

    <div class="flex-grow-1">
        <div class="mb-5">
            @if (Assignment.Roles.Count > 1) 
            {
                <div class="d-flex justify-space-between align-center">
                    <MudText Typo="Typo.h5" Class="mb-2 mt-1">
                        @Assignment.Company.Name
                    </MudText>

                    <div>

                    </div>
                </div>

                <RoleList Roles="Assignment.Roles" />
            }
            else 
            {
                <div class="d-flex justify-space-between align-center">
                    <MudText Typo="Typo.h5" Class="mb-2 mt-1">
                        @Assignment.Roles.First().Title
                    </MudText>

                    <div>

                    </div>
                </div>

                <MudText Typo="Typo.body2">
                    <p>@Assignment.Company.Name • @Assignment.AssignmentType • @Assignment.Employment.Employer.Name</p>
                </MudText>

                <MudText Typo="Typo.body2">
                    <DateDisplay StartDate="@Assignment.StartDate" EndDate="@Assignment.EndDate" />
                </MudText>

                <MudText Typo="Typo.body2">@(Assignment.Roles.FirstOrDefault()?.Location ?? Assignment.Location)</MudText>

                <MudText Typo="Typo.body1" Class="mt-4 mb-2">
                @((MarkupString)Assignment.Roles.FirstOrDefault()?.Description?.Replace("\n", "<br />"))
                </MudText>
            }
        </div>
    </div>
</div>
@code
{
    [Parameter]
    [EditorRequired]
    public Assignment Assignment { get; set; } = null!;

    [Parameter]
    public bool Mini { get; set; }
}