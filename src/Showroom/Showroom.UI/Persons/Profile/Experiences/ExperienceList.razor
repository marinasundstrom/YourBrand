@using YourBrand.Showroom.Client

@foreach (var group in Groups)
{
    var (employmentId, experiences) = group;

    if (experiences.Count() == 1)
    {
        var experience = experiences.First();

        if (experience is Employment employment) 
        {
            <EmploymentView Employment="employment"></EmploymentView>
        }
        else if (experience is Assignment assignment)
        {
            <AssignmentView Assignment="assignment"></AssignmentView>
        }
        else 
        {
            @experience.Description
        }
        
        @* Add more *@
    }
    else
    {
        var employment = experiences.OfType<Employment>().First();

        <EmploymentView Employment="employment"></EmploymentView>

        <MudTimeline TimelinePosition="@TimelinePosition.Start" TimelineAlign="@TimelineAlign.Start">
            @foreach(var experience in experiences.OfType<Assignment>()) 
            {
                <MudTimelineItem>  

                    <ItemDot>
                        <MudAvatar Size="@Size.Medium" Style="margin-top: 14px;">
                            <MudImage Src="@experience.Company.Logo" />
                        </MudAvatar>
                    </ItemDot>

                    <ChildContent>
                        @if (experience is Assignment assignment)
                        {
                            <AssignmentView Assignment="assignment" Mini="true" />
                        }
                        else
                        {
                            @experience.Description
                        }
                    </ChildContent>
                </MudTimelineItem>
            }
        </MudTimeline>

    }

    @if (Groups.LastOrDefault() != group)
    {
        <hr />
    }
}

@code {
    [Parameter]
    [EditorRequired]
    public IEnumerable<IGrouping<string, Experience>> Groups { get; set; } = null!;

    [Parameter]
    public EventCallback<Experience> AddOrEditExperience { get; set; }

    [Parameter]
    public EventCallback<Experience> DeleteExperience { get; set; }
}