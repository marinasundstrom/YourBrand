x-generator: NSwag v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: TimeReport
  version: v1
servers:
- url: https://localhost:5050
paths:
  /Organizations:
    get:
      tags:
      - Organizations
      operationId: Organizations_GetOrganizations
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfOrganization'
      security:
      - JWT: []
    post:
      tags:
      - Organizations
      operationId: Organizations_CreateOrganization
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - JWT: []
  /Organizations/{id}:
    get:
      tags:
      - Organizations
      operationId: Organizations_GetOrganization
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - JWT: []
    put:
      tags:
      - Organizations
      operationId: Organizations_UpdateOrganization
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganization'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - JWT: []
    delete:
      tags:
      - Organizations
      operationId: Organizations_DeleteOrganization
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /Teams:
    get:
      tags:
      - Teams
      operationId: Teams_GetTeams
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfTeam'
      security:
      - JWT: []
    post:
      tags:
      - Teams
      operationId: Teams_CreateTeam
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeam'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
      security:
      - JWT: []
  /Teams/{id}:
    get:
      tags:
      - Teams
      operationId: Teams_GetTeam
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
      security:
      - JWT: []
    put:
      tags:
      - Teams
      operationId: Teams_UpdateTeam
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeam'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
      security:
      - JWT: []
    delete:
      tags:
      - Teams
      operationId: Teams_DeleteTeam
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /Teams/{id}/Members:
    post:
      tags:
      - Teams
      operationId: Teams_AddMember
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMember'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /Teams/{id}/Members/{userId}:
    delete:
      tags:
      - Teams
      operationId: Teams_RemoveMember
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: userId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /Teams/{id}/Memberships:
    get:
      tags:
      - Teams
      operationId: Teams_GetMemberships
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 3
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 4
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfTeamMembership'
      security:
      - JWT: []
  /Activities:
    get:
      tags:
      - Activities
      operationId: Activities_GetActivities
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: projectId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: userId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 8
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfActivity'
      security:
      - JWT: []
    post:
      tags:
      - Activities
      operationId: Activities_CreateActivity
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: projectId
        in: query
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: createActivityDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivity'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
      security:
      - JWT:
        - Administrator
        - Manager
  /Activities/{id}:
    get:
      tags:
      - Activities
      operationId: Activities_GetActivity
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
      security:
      - JWT: []
    put:
      tags:
      - Activities
      operationId: Activities_UpdateActivity
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: updateActivityDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivity'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
      security:
      - JWT: []
    delete:
      tags:
      - Activities
      operationId: Activities_DeleteActivity
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
      security:
      - JWT:
        - Administrator
        - Manager
  /Activities/{id}/Statistics/Summary:
    get:
      tags:
      - Activities
      operationId: Activities_GetStatisticsSummary
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsSummary'
      security:
      - JWT: []
  /ActivityTypes:
    get:
      tags:
      - ActivityTypes
      operationId: ActivityTypes_GetActivityTypes
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: projectId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfActivityType'
      security:
      - JWT: []
    post:
      tags:
      - ActivityTypes
      operationId: ActivityTypes_CreateActivityType
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: createActivityTypeDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivityType'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityType'
      security:
      - JWT:
        - Administrator
        - Manager
  /ActivityTypes/{id}:
    get:
      tags:
      - ActivityTypes
      operationId: ActivityTypes_GetActivityType
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityType'
      security:
      - JWT: []
    put:
      tags:
      - ActivityTypes
      operationId: ActivityTypes_UpdateActivityType
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: updateActivityTypeDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityType'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityType'
      security:
      - JWT: []
    delete:
      tags:
      - ActivityTypes
      operationId: ActivityTypes_DeleteActivityType
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
      security:
      - JWT:
        - Administrator
        - Manager
  /Expenses:
    get:
      tags:
      - Expenses
      operationId: Expenses_GetExpenses
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: projectId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfExpense'
      security:
      - JWT: []
    post:
      tags:
      - Expenses
      operationId: Expenses_CreateExpense
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: projectId
        in: query
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: createExpenseDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExpense'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
      security:
      - JWT: []
  /Expenses/{id}:
    get:
      tags:
      - Expenses
      operationId: Expenses_GetExpense
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
      security:
      - JWT: []
    put:
      tags:
      - Expenses
      operationId: Expenses_UpdateExpense
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: updateExpenseDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExpense'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
      security:
      - JWT: []
    delete:
      tags:
      - Expenses
      operationId: Expenses_DeleteExpense
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /Expenses/{id}/Attachment:
    post:
      tags:
      - Expenses
      operationId: Expenses_UploadAttachment
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  /ExpenseTypes:
    get:
      tags:
      - ExpenseTypes
      operationId: ExpenseTypes_GetExpenseTypes
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: projectId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfExpenseType'
      security:
      - JWT: []
    post:
      tags:
      - ExpenseTypes
      operationId: ExpenseTypes_CreateExpenseType
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: createExpenseTypeDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExpenseType'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseType'
      security:
      - JWT:
        - Administrator
        - Manager
  /ExpenseTypes/{id}:
    get:
      tags:
      - ExpenseTypes
      operationId: ExpenseTypes_GetExpenseType
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseType'
      security:
      - JWT: []
    put:
      tags:
      - ExpenseTypes
      operationId: ExpenseTypes_UpdateExpenseType
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: updateExpenseTypeDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExpenseType'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseType'
      security:
      - JWT: []
    delete:
      tags:
      - ExpenseTypes
      operationId: ExpenseTypes_DeleteExpenseType
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
      security:
      - JWT:
        - Administrator
        - Manager
  /ProjectGroups:
    get:
      tags:
      - ProjectGroups
      operationId: ProjectGroups_GetProjectGroups
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: projectId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfProjectGroup'
      security:
      - JWT: []
    post:
      tags:
      - ProjectGroups
      operationId: ProjectGroups_CreateProjectGroup
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: createProjectGroupDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectGroup'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroup'
      security:
      - JWT:
        - Administrator
        - Manager
  /ProjectGroups/{id}:
    get:
      tags:
      - ProjectGroups
      operationId: ProjectGroups_GetProjectGroup
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroup'
      security:
      - JWT: []
    put:
      tags:
      - ProjectGroups
      operationId: ProjectGroups_UpdateProjectGroup
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: updateProjectGroupDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectGroup'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroup'
      security:
      - JWT: []
    delete:
      tags:
      - ProjectGroups
      operationId: ProjectGroups_DeleteProjectGroup
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
      security:
      - JWT:
        - Administrator
        - Manager
  /Projects:
    get:
      tags:
      - Projects
      operationId: Projects_GetProjects
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: userId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfProject'
      security:
      - JWT: []
    post:
      tags:
      - Projects
      operationId: Projects_CreateProject
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: createProjectDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProject'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      security:
      - JWT:
        - Administrator
        - Manager
  /Projects/{id}:
    get:
      tags:
      - Projects
      operationId: Projects_GetProject
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      security:
      - JWT: []
    put:
      tags:
      - Projects
      operationId: Projects_UpdateProject
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: updateProjectDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      security:
      - JWT:
        - Administrator
        - Manager
    delete:
      tags:
      - Projects
      operationId: Projects_DeleteProject
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
      security:
      - JWT:
        - Administrator
        - Manager
  /Projects/Statistics/Summary:
    get:
      tags:
      - Projects
      operationId: Projects_GetStatisticsSummary
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsSummary'
      security:
      - JWT: []
  /Projects/Statistics:
    get:
      tags:
      - Projects
      operationId: Projects_GetStatistics
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: from
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      - name: to
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
      security:
      - JWT: []
  /Projects/{id}/Statistics/Summary:
    get:
      tags:
      - Projects
      operationId: Projects_GetStatisticsSummary2
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsSummary'
      security:
      - JWT: []
  /Projects/{id}/Statistics:
    get:
      tags:
      - Projects
      operationId: Projects_GetProjectStatistics
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: from
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: to
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
      security:
      - JWT: []
  /Projects/{id}/Memberships:
    get:
      tags:
      - Projects
      operationId: Projects_GetProjectMemberships
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 3
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfProjectMembership'
      security:
      - JWT: []
    post:
      tags:
      - Projects
      operationId: Projects_CreateProjectMembership
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: createProjectMembershipDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectMembership'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMembership'
      security:
      - JWT:
        - Administrator
        - Manager
  /Projects/{id}/Memberships/{membershipId}:
    get:
      tags:
      - Projects
      operationId: Projects_GetProjectMembership
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: membershipId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMembership'
      security:
      - JWT: []
    put:
      tags:
      - Projects
      operationId: Projects_UpdateProjectMembership
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: membershipId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: updateProjectMembershipDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectMembership'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMembership'
      security:
      - JWT:
        - Administrator
        - Manager
    delete:
      tags:
      - Projects
      operationId: Projects_DeleteProjectMembership
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: membershipId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
      security:
      - JWT:
        - Administrator
        - Manager
  /Projects/{id}/Bill:
    post:
      tags:
      - Projects
      operationId: Projects_BillProject
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: from
        in: query
        schema:
          type: string
          format: date-time
        x-position: 3
      - name: to
        in: query
        schema:
          type: string
          format: date-time
        x-position: 4
      responses:
        200:
          description: ''
      security:
      - JWT:
        - Administrator
        - Manager
  /Reports:
    get:
      tags:
      - Reports
      operationId: Reports_GetReport
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: projectIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        x-position: 2
      - name: userId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: startDate
        in: query
        schema:
          type: string
          format: date-time
        x-position: 4
      - name: endDate
        in: query
        schema:
          type: string
          format: date-time
        x-position: 5
      - name: statuses
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
        x-position: 6
      - name: mode
        in: query
        schema:
          default: 1
          oneOf:
          - $ref: '#/components/schemas/ReportMode'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  /TimeSheets:
    get:
      tags:
      - TimeSheets
      operationId: TimeSheets_GetTimeSheets
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: projectId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: userId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 8
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfTimeSheet'
      security:
      - JWT: []
  /TimeSheets/{id}:
    get:
      tags:
      - TimeSheets
      operationId: TimeSheets_GetTimeSheet
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSheet'
      security:
      - JWT: []
  /TimeSheets/{year}/{week}:
    get:
      tags:
      - TimeSheets
      operationId: TimeSheets_GetTimeSheetForWeek
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: year
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: week
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: userId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSheet'
      security:
      - JWT: []
  /TimeSheets/{timeSheetId}:
    post:
      tags:
      - TimeSheets
      operationId: TimeSheets_CreateEntry
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: timeSheetId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEntry'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        403:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /TimeSheets/{timeSheetId}/{entryId}:
    put:
      tags:
      - TimeSheets
      operationId: TimeSheets_UpdateEntry
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: timeSheetId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: entryId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntry'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        403:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /TimeSheets/{timeSheetId}/{entryId}/Details:
    put:
      tags:
      - TimeSheets
      operationId: TimeSheets_UpdateEntryDetails
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: timeSheetId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: entryId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntryDetails'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        403:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /TimeSheets/{timeSheetId}/{activityId}:
    delete:
      tags:
      - TimeSheets
      operationId: TimeSheets_DeleteActvityEntries
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: timeSheetId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: activityId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        403:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /TimeSheets/{timeSheetId}/CloseWeek:
    post:
      tags:
      - TimeSheets
      operationId: TimeSheets_CloseWeek
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: timeSheetId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
        403:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /TimeSheets/{timeSheetId}/OpenWeek:
    post:
      tags:
      - TimeSheets
      operationId: TimeSheets_OpenWeek
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: timeSheetId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
        403:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /TimeSheets/{timeSheetId}/Approve:
    post:
      tags:
      - TimeSheets
      operationId: TimeSheets_ApproveWeek
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: timeSheetId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
        403:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /TimeSheets/{timeSheetId}/Status:
    put:
      tags:
      - TimeSheets
      operationId: TimeSheets_UpdateTimeSheetStatus
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: timeSheetId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: statusCode
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        200:
          description: ''
        403:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /TimeSheets/{timeSheetId}/LockMonth:
    post:
      tags:
      - TimeSheets
      operationId: TimeSheets_LockMonth
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: timeSheetId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
        403:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /Users:
    get:
      tags:
      - Users
      operationId: Users_GetUsers
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfUser'
      security:
      - JWT: []
    post:
      tags:
      - Users
      operationId: Users_CreateUser
      requestBody:
        x-name: createUserDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - JWT:
        - Administrator
        - Manager
  /Users/{id}:
    get:
      tags:
      - Users
      operationId: Users_GetUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - JWT: []
    delete:
      tags:
      - Users
      operationId: Users_DeleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
      security:
      - JWT:
        - Administrator
        - Manager
  /Users/{id}/Details:
    put:
      tags:
      - Users
      operationId: Users_UpdateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: updateUserDetailsDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDetails'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - JWT:
        - Administrator
        - Manager
  /Users/{id}/Memberships:
    get:
      tags:
      - Users
      operationId: Users_GetProjectMemberships
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfProjectMembership'
      security:
      - JWT: []
  /Users/{id}/Statistics:
    get:
      tags:
      - Users
      operationId: Users_GetStatistics
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      - name: from
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      - name: to
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
      security:
      - JWT: []
  /Users/{id}/Statistics/Summary:
    get:
      tags:
      - Users
      operationId: Users_GetStatisticsSummary
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsSummary'
      security:
      - JWT: []
components:
  schemas:
    ItemsResultOfOrganization:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        totalItems:
          type: integer
          format: int32
    Organization:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    SortDirection:
      type: string
      description: ''
      x-enumNames:
      - Desc
      - Asc
      enum:
      - Desc
      - Asc
    CreateOrganization:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        parentOrganizationId:
          type: string
          nullable: true
    UpdateOrganization:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
    ItemsResultOfTeam:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Team'
        totalItems:
          type: integer
          format: int32
    Team:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/TeamMember'
    TeamMember:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    CreateTeam:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
    UpdateTeam:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
    AddMember:
      type: object
      additionalProperties: false
      properties:
        userId:
          type: string
    ItemsResultOfTeamMembership:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TeamMembership'
        totalItems:
          type: integer
          format: int32
    TeamMembership:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
          nullable: true
        ssn:
          type: string
        email:
          type: string
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Team'
        created:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
          nullable: true
    ItemsResultOfActivity:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        totalItems:
          type: integer
          format: int32
    Activity:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        activityType:
          $ref: '#/components/schemas/ActivityType'
        description:
          type: string
          nullable: true
        hourlyRate:
          type: number
          format: decimal
          nullable: true
        project:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Project'
    ActivityType:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        excludeHours:
          type: boolean
        project:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Project'
    Project:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        organization:
          $ref: '#/components/schemas/Organization'
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    CreateActivity:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        activityTypeId:
          type: string
        description:
          type: string
          nullable: true
        hourlyRate:
          type: number
          format: decimal
          nullable: true
    UpdateActivity:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        activityTypeId:
          type: string
        description:
          type: string
          nullable: true
        hourlyRate:
          type: number
          format: decimal
          nullable: true
    StatisticsSummary:
      type: object
      additionalProperties: false
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/StatisticsSummaryEntry'
    StatisticsSummaryEntry:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        value:
          type: number
          format: double
          nullable: true
        value2:
          type: number
          format: decimal
          nullable: true
        unit:
          type: string
          nullable: true
    ItemsResultOfActivityType:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ActivityType'
        totalItems:
          type: integer
          format: int32
    CreateActivityType:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        organizationId:
          type: string
        projectId:
          type: string
          nullable: true
        excludeHours:
          type: boolean
    UpdateActivityType:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        organizationId:
          type: string
        projectId:
          type: string
          nullable: true
        excludeHours:
          type: boolean
    ItemsResultOfExpense:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
        totalItems:
          type: integer
          format: int32
    Expense:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        expenseType:
          $ref: '#/components/schemas/ExpenseType'
        amount:
          type: number
          format: decimal
        description:
          type: string
          nullable: true
        attachment:
          type: string
          nullable: true
        project:
          $ref: '#/components/schemas/Project'
    ExpenseType:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        project:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Project'
    CreateExpense:
      type: object
      additionalProperties: false
      properties:
        date:
          type: string
          format: date-time
        expenseTypeId:
          type: string
        amount:
          type: number
          format: decimal
        description:
          type: string
          nullable: true
    UpdateExpense:
      type: object
      additionalProperties: false
      properties:
        date:
          type: string
          format: date-time
        amount:
          type: number
          format: decimal
        description:
          type: string
          nullable: true
    ItemsResultOfExpenseType:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseType'
        totalItems:
          type: integer
          format: int32
    CreateExpenseType:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
    UpdateExpenseType:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
    ItemsResultOfProjectGroup:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProjectGroup'
        totalItems:
          type: integer
          format: int32
    ProjectGroup:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        project:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Project'
    CreateProjectGroup:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
    UpdateProjectGroup:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
    ItemsResultOfProject:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        totalItems:
          type: integer
          format: int32
    CreateProject:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        organizationId:
          type: string
          nullable: true
    UpdateProject:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        organizationId:
          type: string
          nullable: true
    Data:
      type: object
      additionalProperties: false
      properties:
        labels:
          type: array
          items:
            type: string
        series:
          type: array
          items:
            $ref: '#/components/schemas/Series'
    Series:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        data:
          type: array
          items:
            type: number
            format: decimal
    ItemsResultOfProjectMembership:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMembership'
        totalItems:
          type: integer
          format: int32
    ProjectMembership:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        project:
          $ref: '#/components/schemas/Project'
        user:
          $ref: '#/components/schemas/User'
        from:
          type: string
          format: date-time
          nullable: true
        thru:
          type: string
          format: date-time
          nullable: true
    CreateProjectMembership:
      type: object
      additionalProperties: false
      properties:
        userId:
          type: string
        from:
          type: string
          format: date-time
          nullable: true
        thru:
          type: string
          format: date-time
          nullable: true
    UpdateProjectMembership:
      type: object
      additionalProperties: false
      properties:
        from:
          type: string
          format: date-time
          nullable: true
        thru:
          type: string
          format: date-time
          nullable: true
    ReportMode:
      type: integer
      description: ''
      x-enumNames:
      - User
      - Project
      enum:
      - 0
      - 1
    ItemsResultOfTimeSheet:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TimeSheet'
        totalItems:
          type: integer
          format: int32
    TimeSheet:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        year:
          type: integer
          format: int32
        week:
          type: integer
          format: int32
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/TimeSheetStatus'
        user:
          $ref: '#/components/schemas/User'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/TimeSheetActivity'
        months:
          type: array
          items:
            $ref: '#/components/schemas/ReportingPeriod'
    TimeSheetStatus:
      type: string
      description: ''
      x-enumNames:
      - Open
      - Closed
      - Approved
      - Disapproved
      enum:
      - Open
      - Closed
      - Approved
      - Disapproved
    TimeSheetActivity:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        project:
          $ref: '#/components/schemas/Project'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/TimeSheetEntry'
    TimeSheetEntry:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        hours:
          type: number
          format: double
          nullable: true
        description:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/EntryStatus'
    EntryStatus:
      type: string
      description: ''
      x-enumNames:
      - Unlocked
      - Locked
      enum:
      - Unlocked
      - Locked
    ReportingPeriod:
      type: object
      additionalProperties: false
      properties:
        month:
          type: integer
          format: int32
        isLocked:
          type: boolean
    Entry:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        project:
          $ref: '#/components/schemas/Project'
        activity:
          $ref: '#/components/schemas/Activity'
        date:
          type: string
          format: date-time
        hours:
          type: number
          format: double
          nullable: true
        description:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/EntryStatus'
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        extensions:
          type: object
          additionalProperties: {}
    CreateEntry:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
        projectId:
          type: string
          nullable: true
        activityId:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        hours:
          type: number
          format: double
          nullable: true
        description:
          type: string
          nullable: true
    UpdateEntry:
      type: object
      additionalProperties: false
      properties:
        hours:
          type: number
          format: double
          nullable: true
        description:
          type: string
          nullable: true
    UpdateEntryDetails:
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
          nullable: true
    ItemsResultOfUser:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        totalItems:
          type: integer
          format: int32
    CreateUser:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
          nullable: true
        ssn:
          type: string
        email:
          type: string
    UpdateUserDetails:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
          nullable: true
        ssn:
          type: string
        email:
          type: string
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
