@using System.ComponentModel.DataAnnotations
@inject ISitesClient SitesClient
@inject ISnackbar Snackbar

<EditForm EditContext="@context" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudDialog Gutters="false">
        <DialogContent>
            <MudContainer Style="max-height: 500px; overflow-y: scroll">
                <MudTextField Label="Name" Variant="Variant.Outlined" Class="mt-4" @bind-Value="Name"
                              For="@(() => Name)" />
                @if(SiteId is null) 
                {
                    <MudCheckBox Label="Create warehouse" Variant="Variant.Outlined" Class="mt-4" @bind-Value="CreateWarehouse"
                                For="@(() => CreateWarehouse)" />
                }
            </MudContainer>
        </DialogContent>

        <DialogActions>
            <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="() => Dialog.Cancel()">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Text" Color="Color.Primary">
                @if(SiteId is null) 
                {
                    <text>Add</text>
                }
                else 
                {
                    <text>Update</text>
                }
            </MudButton>
        </DialogActions>
    </MudDialog>

</EditForm>

@code
{
    EditContext context = null!;

    [CascadingParameter]
    public MudDialogInstance Dialog { get; set; } = null!;

    [Parameter]
    public string? SiteId { get; set; } = null!;

    [Required]
    public string Name { get; set; }

    public bool CreateWarehouse { get; set; }

    protected override async Task OnInitializedAsync()
    {
        context = new EditContext(this);

        if (SiteId is not null) 
        {
            var site = await SitesClient.GetSiteAsync(SiteId);
            Name = site.Name;
        }
    }

    public async Task OnValidSubmit()
    {
        if(SiteId is null) 
        {
            await SitesClient.CreateSiteAsync(new CreateSite {
                Name = Name,
                CreateWarehouse = CreateWarehouse
            });

            //Dialog.Close(site);
        }
        else
        {
            if (context.IsModified())
            {
                await SitesClient.UpdateSiteAsync(SiteId, new UpdateSite
                {
                    Name = Name
                });
            }

            Dialog.Close();
        }

        Dialog.Close();
    }
}