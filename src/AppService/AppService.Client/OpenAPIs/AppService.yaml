x-generator: NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: AppService
  description: ''
  version: v1
servers:
- url: https://localhost:5020
paths:
  /v1/BrandProfile:
    get:
      tags:
      - BrandProfile
      operationId: BrandProfile_GetBrandProfile
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandProfile'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
    post:
      tags:
      - BrandProfile
      operationId: BrandProfile_UpdateBrandProfile
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBrandProfileRequest'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandProfile'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Modules:
    get:
      tags:
      - Modules
      operationId: Modules_GetModules
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Module'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Modules/{id}/Toggle:
    post:
      tags:
      - Modules
      operationId: Modules_ToggleModule
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Notifications:
    get:
      tags:
      - Notifications
      operationId: Notifications_GetNotifications
      parameters:
      - name: includeUnreadNotificationsCount
        in: query
        schema:
          type: boolean
          default: false
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 5
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResults'
      security:
      - JWT: []
    post:
      tags:
      - Notifications
      operationId: Notifications_CreateNotification
      requestBody:
        x-name: createNotificationDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotification'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  /v1/Notifications/{id}/MarkAsRead:
    post:
      tags:
      - Notifications
      operationId: Notifications_MarkNotificationAsRead
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  /v1/Notifications/MarkAllAsRead:
    post:
      tags:
      - Notifications
      operationId: Notifications_MarkAllNotificationsAsRead
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  /v1/Organizations:
    get:
      tags:
      - Organizations
      operationId: Organizations_GetOrganizations
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 5
        x-position: 2
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResultOfOrganization'
      security:
      - JWT: []
  /v1/Search:
    post:
      tags:
      - Search
      operationId: Search_Search
      parameters:
      - name: searchText
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 5
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResultOfSearchResultItem'
      security:
      - JWT: []
  /v1/Setup:
    post:
      tags:
      - Setup
      operationId: Setup_Setup
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetupRequest'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
  /v1/DoSomething:
    post:
      tags:
      - DoSomething
      operationId: DoSomething_DoSomething
      parameters:
      - name: lhs
        in: query
        schema:
          type: number
          format: double
        x-position: 1
      - name: rhs
        in: query
        schema:
          type: number
          format: double
        x-position: 2
      responses:
        204:
          description: ''
  /v1/TenantModules:
    get:
      tags:
      - TenantModules
      operationId: TenantModules_GetModules
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenantModule'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/TenantModules/{id}/Toggle:
    post:
      tags:
      - TenantModules
      operationId: TenantModules_ToggleModule
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/TenantModules/PopulateModules:
    post:
      tags:
      - TenantModules
      operationId: TenantModules_PopulateModules
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Widgets:
    get:
      tags:
      - Widgets
      operationId: Widgets_GetWidgets
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResultOfWidget'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
components:
  schemas:
    BrandProfile:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        colors:
          $ref: '#/components/schemas/BrandColors'
    BrandColors:
      type: object
      additionalProperties: false
      properties:
        light:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BrandColorPalette'
        dark:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BrandColorPalette'
    BrandColorPalette:
      type: object
      additionalProperties: false
      properties:
        backgroundColor:
          type: string
          nullable: true
        appbarBackgroundColor:
          type: string
          nullable: true
        primaryColor:
          type: string
          nullable: true
        secondaryColor:
          type: string
          nullable: true
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    UpdateBrandProfileRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        colors:
          $ref: '#/components/schemas/BrandColors'
    Module:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
        assembly:
          type: string
        enabled:
          type: boolean
        dependantOn:
          type: array
          items:
            type: string
    NotificationsResults:
      allOf:
      - $ref: '#/components/schemas/ItemResultOfNotification'
      - type: object
        additionalProperties: false
        properties:
          unreadNotificationsCount:
            type: integer
            format: int32
            nullable: true
    ItemResultOfNotification:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        totalCount:
          type: integer
          format: int32
    Notification:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        content:
          type: string
        link:
          type: string
          nullable: true
        published:
          type: string
          format: date-time
        isRead:
          type: boolean
    SortDirection:
      type: string
      description: ''
      x-enumNames:
      - Desc
      - Asc
      enum:
      - Desc
      - Asc
    CreateNotification:
      type: object
      additionalProperties: false
      properties:
        content:
          type: string
        link:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        scheduledFor:
          type: string
          format: date-time
          nullable: true
    ItemResultOfOrganization:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        totalCount:
          type: integer
          format: int32
    Organization:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        friendlyName:
          type: string
          nullable: true
    ItemResultOfSearchResultItem:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultItem'
        totalCount:
          type: integer
          format: int32
    SearchResultItem:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
        resultType:
          $ref: '#/components/schemas/SearchResultItemType'
        description:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        itemId:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
    SearchResultItemType:
      type: string
      description: ''
      x-enumNames:
      - Item
      enum:
      - Item
    SetupRequest:
      type: object
      additionalProperties: false
      properties:
        organizationName:
          type: string
        email:
          type: string
        password:
          type: string
    TenantModule:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        module:
          $ref: '#/components/schemas/Module'
        enabled:
          type: boolean
    ItemResultOfWidget:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Widget'
        totalCount:
          type: integer
          format: int32
    Widget:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        widgetId:
          type: string
        widgetAreaId:
          type: string
        userId:
          type: string
          nullable: true
        settings:
          type: string
          nullable: true
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
