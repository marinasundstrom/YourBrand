x-generator: NSwag v14.0.0.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: Ticketing
  version: v1
servers:
- url: https://localhost:5261
paths:
  /v1/Users:
    get:
      tags:
      - Users
      operationId: Users_GetUsers
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfUser'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Users
      operationId: Users_CreateUser
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Users/UserInfo:
    get:
      tags:
      - Users
      operationId: Users_GetUserInfo
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Test/{id}/status:
    put:
      tags:
      - Test
      operationId: Test_UpdateStatus
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: status
        content:
          application/json:
            schema:
              type: string
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Tickets:
    get:
      tags:
      - Tickets
      operationId: Tickets_GetTickets
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: status
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 2
      - name: assigneeId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 4
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfTicket'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
    post:
      tags:
      - Tickets
      operationId: Tickets_CreateTicket
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
        required: true
        x-position: 2
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Tickets/{id}:
    get:
      tags:
      - Tickets
      operationId: Tickets_GetTicketById
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
    delete:
      tags:
      - Tickets
      operationId: Tickets_DeleteTicket
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Tickets/{id}/subject:
    put:
      tags:
      - Tickets
      operationId: Tickets_UpdateTitle
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: title
        content:
          application/json:
            schema:
              type: string
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Tickets/{id}/text:
    put:
      tags:
      - Tickets
      operationId: Tickets_UpdateText
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: text
        content:
          application/json:
            schema:
              type: string
        x-position: 3
      responses:
        200:
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Tickets/{id}/status:
    put:
      tags:
      - Tickets
      operationId: Tickets_UpdateStatus
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: status
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Tickets/{id}/assignee:
    put:
      tags:
      - Tickets
      operationId: Tickets_UpdateAssignee
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: userId
        content:
          application/json:
            schema:
              type: string
        x-position: 3
      responses:
        200:
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Tickets/{id}/estimatedHours:
    put:
      tags:
      - Tickets
      operationId: Tickets_UpdateEstimatedHours
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: hours
        content:
          application/json:
            schema:
              type: number
              format: double
        x-position: 3
      responses:
        200:
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Tickets/{id}/remainingHours:
    put:
      tags:
      - Tickets
      operationId: Tickets_UpdateRemainingHours
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: hours
        content:
          application/json:
            schema:
              type: number
              format: double
        x-position: 3
      responses:
        200:
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/TicketStatuses:
    get:
      tags:
      - TicketStatuses
      operationId: TicketStatuses_GetStatuses
      parameters:
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfTicketStatus'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Organizations:
    get:
      tags:
      - Organizations
      operationId: Organizations_GetOrganizations
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfOrganization'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Organizations
      operationId: Organizations_CreateOrganization
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
components:
  schemas:
    PagedResultOfUser:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        total:
          type: integer
          format: int32
    User:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    SortDirection:
      type: string
      description: ''
      x-enumNames:
      - Ascending
      - Descending
      enum:
      - Ascending
      - Descending
    UserInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateUser:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
    PagedResultOfTicket:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
        total:
          type: integer
          format: int32
    Ticket:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        requester:
          type: string
        subject:
          type: string
        description:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/TicketStatus'
        assignee:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/User'
        lastMessage:
          type: string
          format: date-time
          nullable: true
        text:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/TicketType'
        priority:
          $ref: '#/components/schemas/TicketPriority'
        urgency:
          $ref: '#/components/schemas/TicketUrgency'
        impact:
          $ref: '#/components/schemas/TicketImpact'
        estimatedHours:
          type: number
          format: double
          nullable: true
        remainingHours:
          type: number
          format: double
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        created:
          type: string
          format: date-time
        createdBy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/User'
        lastModified:
          type: string
          format: date-time
          nullable: true
        lastModifiedBy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/User'
    TicketStatus:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    TicketType:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    TicketPriority:
      type: integer
      description: ''
      x-enumNames:
      - Critical
      - High
      - Medium
      - Low
      - VeryLow
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
    TicketUrgency:
      type: integer
      description: ''
      x-enumNames:
      - High
      - Medium
      - Low
      enum:
      - 0
      - 1
      - 2
    TicketImpact:
      type: integer
      description: ''
      x-enumNames:
      - High
      - Medium
      - Low
      enum:
      - 0
      - 1
      - 2
    Tag:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Attachment:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    CreateTicketRequest:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
        text:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
        assigneeId:
          type: string
          nullable: true
        estimatedHours:
          type: number
          format: double
          nullable: true
        remainingHours:
          type: number
          format: double
          nullable: true
    PagedResultOfTicketStatus:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TicketStatus'
        total:
          type: integer
          format: int32
    PagedResultOfOrganization:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        total:
          type: integer
          format: int32
    Organization:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateOrganization:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
