@page "/customers/{Id:int}"
@attribute [Authorize]
@using Humanizer
@using YourBrand.Portal.Modules
@inject ICustomersClient CustomersClient
@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject ISnackbar Snackbar

@if (@customer is null)
{
    if (loadingFailed)
    {
        <MudText Typo="Typo.h3" Class="mb-4">Error when loading customer.</MudText>
    }
    else
    {
        <LoadingIndicator />
    }
}
else
{
    <MudText Typo="Typo.h3" Class="mb-4">
        @if (customer.CustomerType == CustomerType.Individual)
        {
            <text>@Id - @customer.FirstName @customer.LastName (@customer.Ssn)</text>
        }
        else if (customer.CustomerType == CustomerType.Organization)
        {
            <text>@Id - @customer.Name (@customer.OrgNo)</text>
        }
    </MudText>

    <MudText Typo="Typo.h4" GutterBottom="true">Address</MudText>

    <MudPaper Class="pa-4 mb-4" Elevation="25">
        @customer.Address.Thoroughfare @customer.Address.Premises @customer.Address.SubPremises<br />
        @customer.Address.PostalCode @customer.Address.Locality<br />
        @customer.Address.SubAdministrativeArea @customer.Address.AdministrativeArea<br />
    </MudPaper>
    
    <ModuleBoundary ModuleId="@KnownsModulesIds.SalesModule">

        <MudText Typo="Typo.h4" GutterBottom="true" Class="mt-4">Orders</MudText>

        <YourBrand.Sales.OrderTable CustomerId="@(Id.ToString())" />

        <MudText Typo="Typo.h4" GutterBottom="true" Class="mt-4">Subscriptions</MudText>

        <YourBrand.Sales.SubscriptionTable CustomerId="@(Id.ToString())" />

    </ModuleBoundary>

    <ModuleBoundary ModuleId="@KnownsModulesIds.InvoicingModule">

        <MudText Typo="Typo.h4" GutterBottom="true" Class="mt-4">Invoices</MudText>

        <YourBrand.Invoicing.InvoiceTable CustomerId="@(Id.ToString())" />
    
    </ModuleBoundary>
}

@code
{
    private Customer? @customer;
    private bool loadingFailed = false;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        loadingFailed = false;

        try
        {
            this.@customer = await CustomersClient.GetCustomerAsync(Id);
        }
        catch (Exception exc)
        {
            loadingFailed = true;
            //await JSHelpers.Alert(exc.Message);
        }
    }
}
