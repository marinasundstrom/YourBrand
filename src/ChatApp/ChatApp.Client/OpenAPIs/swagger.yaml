x-generator: NSwag v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: ChatApp
  version: v1
servers:
- url: https://localhost:7087
paths:
  /v1/Channels:
    get:
      tags:
      - Channels
      operationId: Channels_GetChannels
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfChannel'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfChannel'
      security:
      - ApiKey: []
      - JWT: []
    post:
      tags:
      - Channels
      operationId: Channels_CreateChannel
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelRequest'
        required: true
        x-position: 1
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKey: []
      - JWT: []
  /v1/Channels/{id}:
    get:
      tags:
      - Channels
      operationId: Channels_GetChannelById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKey: []
      - JWT: []
  /v1/Channels/{id}/join:
    post:
      tags:
      - Channels
      operationId: Channels_JoinChannel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChannelId'
        x-position: 1
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKey: []
      - JWT: []
  /v1/Channels/{channelId}/Messages:
    get:
      tags:
      - Messages
      operationId: Messages_GetMessages
      parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChannelId'
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfMessage'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfMessage'
      security:
      - ApiKey: []
      - JWT: []
    post:
      tags:
      - Messages
      operationId: Messages_PostMessage
      parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChannelId'
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMessageRequest'
        required: true
        x-position: 2
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: string
                format: guid
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKey: []
      - JWT: []
  /v1/Channels/{channelId}/Messages/{id}:
    get:
      tags:
      - Messages
      operationId: Messages_GetMessageById
      parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChannelId'
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKey: []
      - JWT: []
    delete:
      tags:
      - Messages
      operationId: Messages_DeleteMessage
      parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChannelId'
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKey: []
      - JWT: []
    put:
      tags:
      - Messages
      operationId: Messages_EditMessage
      parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChannelId'
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: content
        content:
          application/json:
            schema:
              type: string
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKey: []
      - JWT: []
  /v1/Channels/{channelId}/Messages/{id}/Reaction:
    post:
      tags:
      - Messages
      operationId: Messages_React
      parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChannelId'
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: reaction
        content:
          application/json:
            schema:
              type: string
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKey: []
      - JWT: []
    delete:
      tags:
      - Messages
      operationId: Messages_RemoveReaction
      parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChannelId'
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: reaction
        content:
          application/json:
            schema:
              type: string
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKey: []
      - JWT: []
  /v1/Users:
    get:
      tags:
      - Users
      operationId: Users_GetUsers
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfUser'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Users
      operationId: Users_CreateUser
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKey: []
      - JWT: []
  /v1/Users/UserInfo:
    get:
      tags:
      - Users
      operationId: Users_GetUserInfo
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Organizations:
    get:
      tags:
      - Organizations
      operationId: Organizations_GetOrganizations
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfOrganization'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Organizations
      operationId: Organizations_CreateOrganization
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKey: []
      - JWT: []
components:
  schemas:
    ItemsResultOfChannel:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        totalItems:
          type: integer
          format: int32
    Channel:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
    SortDirection:
      type: string
      description: ''
      x-enumNames:
      - Ascending
      - Descending
      enum:
      - Ascending
      - Descending
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    CreateChannelRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
    ChannelId:
      type: string
    ItemsResultOfMessage:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        totalItems:
          type: integer
          format: int32
    Message:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        channelId:
          type: string
          format: guid
        replyTo:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ReplyMessage'
        content:
          type: string
        posted:
          type: string
          format: date-time
        postedBy:
          $ref: '#/components/schemas/Participant'
        lastEdited:
          type: string
          format: date-time
          nullable: true
        lastEditedBy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Participant'
        deleted:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Participant'
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/Reaction'
    ReplyMessage:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        channelId:
          type: string
          format: guid
        content:
          type: string
        posted:
          type: string
          format: date-time
        postedBy:
          $ref: '#/components/schemas/Participant'
        lastEdited:
          type: string
          format: date-time
          nullable: true
        lastEditedBy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Participant'
        deleted:
          type: string
          format: date-time
          nullable: true
        deletedBy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Participant'
    Participant:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        channelId:
          type: string
          format: guid
        name:
          type: string
        userId:
          type: string
          nullable: true
    Reaction:
      type: object
      additionalProperties: false
      properties:
        content:
          type: string
        date:
          type: string
          format: date-time
        addedBy:
          $ref: '#/components/schemas/Participant'
    PostMessageRequest:
      type: object
      additionalProperties: false
      properties:
        channelId:
          type: string
          format: guid
        replyToId:
          type: string
          format: guid
          nullable: true
        content:
          type: string
    PagedResultOfUser:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        total:
          type: integer
          format: int32
    User:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    UserInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateUser:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
    PagedResultOfOrganization:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        total:
          type: integer
          format: int32
    Organization:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateOrganization:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      description: 'Type into the textbox: {your API key}.'
      name: X-API-Key
      in: header
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
