x-generator: NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: Sales
  description: ''
  version: v1
servers:
- url: https://localhost:5130
paths:
  /v1/orders:
    get:
      tags:
      - Orders
      - Orders
      operationId: Orders_GetOrders
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: types
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 2
      - name: status
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 3
      - name: customerId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: ssn
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: assigneeId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: subscriptionId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 7
      - name: fromDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 8
      - name: toDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 9
      - name: plannedFromDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 10
      - name: plannedToDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 11
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 12
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 13
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 14
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 15
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfOrder'
      security:
      - JWT: []
    post:
      tags:
      - Orders
      - Orders
      operationId: Orders_CreateOrder
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
        required: true
        x-position: 2
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/{id}:
    get:
      tags:
      - Orders
      - Orders
      operationId: Orders_GetOrderById
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: ''
      security:
      - JWT: []
    delete:
      tags:
      - Orders
      - Orders
      operationId: Orders_DeleteOrder
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/getByNo/{orderNo}:
    get:
      tags:
      - Orders
      - Orders
      operationId: Orders_GetOrderByNo
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: orderNo
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/draft:
    post:
      tags:
      - Orders
      - Orders
      operationId: Orders_CreateDraftOrder
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDraftOrderRequest'
        required: true
        x-position: 2
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/{id}/items:
    post:
      tags:
      - Orders
      - Orders
      operationId: Orders_AddOrderItem
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrderItemRequest'
        required: true
        x-position: 3
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/{id}/items/{itemId}:
    get:
      tags:
      - Orders
      - Orders
      operationId: Orders_GetOrderItemById
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
        404:
          description: ''
      security:
      - JWT: []
    put:
      tags:
      - Orders
      - Orders
      operationId: Orders_UpdateOrderItem
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderItemRequest'
        required: true
        x-position: 4
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
        404:
          description: ''
      security:
      - JWT: []
    delete:
      tags:
      - Orders
      - Orders
      operationId: Orders_RemoveOrderItem
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/{id}/items/{itemId}/quantity:
    put:
      tags:
      - Orders
      - Orders
      operationId: Orders_UpdateOrderItemQuantity
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderItemQuantityRequest'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/{id}/status:
    put:
      tags:
      - Orders
      - Orders
      operationId: Orders_UpdateStatus
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: status
        in: query
        required: true
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/{id}/customer:
    put:
      tags:
      - Orders
      - Orders
      operationId: Orders_SetCustomer
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCustomer'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/{id}/assignee:
    put:
      tags:
      - Orders
      - Orders
      operationId: Orders_UpdateAssignedUser
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: userId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/{id}/billingDetails:
    put:
      tags:
      - Orders
      - Orders
      operationId: Orders_UpdateBillingDetails
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: billingDetails
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingDetails'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/{id}/shippingDetails:
    put:
      tags:
      - Orders
      - Orders
      operationId: Orders_UpdateShippingDetails
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: shippingDetails
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingDetails'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
      security:
      - JWT: []
  /v1/orders/{id}/subscription/activate:
    post:
      tags:
      - Orders
      - Orders
      operationId: Orders_ActivateSubscriptionOrder
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
  /v1/orders/types:
    get:
      tags:
      - OrderTypes
      - OrderTypes
      operationId: OrderTypes_GetOrderTypes
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfOrderType'
    post:
      tags:
      - OrderTypes
      - OrderTypes
      operationId: OrderTypes_CreateOrder
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderType'
        required: true
        x-position: 2
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderType'
        404:
          description: ''
  /v1/orders/types/{id}:
    get:
      tags:
      - OrderTypes
      - OrderTypes
      operationId: OrderTypes_GetOrderTypeById
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderType'
        404:
          description: ''
    post:
      tags:
      - OrderTypes
      - OrderTypes
      operationId: OrderTypes_UpdateOrderType
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderType'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
    delete:
      tags:
      - OrderTypes
      - OrderTypes
      operationId: OrderTypes_DeleteOrderType
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
  /v1/orders/statuses:
    get:
      tags:
      - OrderStatuses
      - OrderStatuses
      operationId: OrderStatuses_GetOrderStatuses
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfOrderStatus'
    post:
      tags:
      - OrderStatuses
      - OrderStatuses
      operationId: OrderStatuses_CreateOrder
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderStatus'
        required: true
        x-position: 2
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
        404:
          description: ''
  /v1/orders/statuses/{id}:
    get:
      tags:
      - OrderStatuses
      - OrderStatuses
      operationId: OrderStatuses_GetOrderStatusById
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
        404:
          description: ''
    post:
      tags:
      - OrderStatuses
      - OrderStatuses
      operationId: OrderStatuses_UpdateOrderStatus
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatus'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
    delete:
      tags:
      - OrderStatuses
      - OrderStatuses
      operationId: OrderStatuses_DeleteOrderStatus
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
  /v1/subscriptionPlans:
    get:
      tags:
      - SubscriptionPlans
      - SubscriptionPlans
      operationId: SubscriptionPlans_GetSubscriptionPlans
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfSubscriptionPlan'
      security:
      - JWT: []
  /v1/subscriptionPlans/{id}:
    get:
      tags:
      - SubscriptionPlans
      - SubscriptionPlans
      operationId: SubscriptionPlans_GetSubscriptionPlanById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlan'
      security:
      - JWT: []
  /v1/subscriptions:
    get:
      tags:
      - Subscriptions
      - Subscriptions
      operationId: Subscriptions_GetSubscriptions
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: types
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 2
      - name: status
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 3
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 4
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfSubscription'
      security:
      - JWT: []
    post:
      tags:
      - Subscriptions
      - Subscriptions
      operationId: Subscriptions_CreateSubscriptionOrder
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      security:
      - JWT: []
  /v1/subscriptions/{id}:
    get:
      tags:
      - Subscriptions
      - Subscriptions
      operationId: Subscriptions_GetSubscriptionById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      security:
      - JWT: []
  /v1/subscriptions/getByNo/{subscriptionNo}:
    get:
      tags:
      - Subscriptions
      - Subscriptions
      operationId: Subscriptions_GetSubscriptionByNo
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: subscriptionNo
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      security:
      - JWT: []
  /v1/subscriptions/{id}/status:
    put:
      tags:
      - Subscriptions
      - Subscriptions
      operationId: Subscriptions_UpdateSubscriptionStatus
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionStatusRequest'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /v1/subscriptions/types:
    get:
      tags:
      - SubscriptionTypes
      - SubscriptionTypes
      operationId: SubscriptionTypes_GetSubscriptionTypes
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfSubscriptionType'
    post:
      tags:
      - SubscriptionTypes
      - SubscriptionTypes
      operationId: SubscriptionTypes_CreateSubscriptionType
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionType'
        required: true
        x-position: 2
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionType'
        404:
          description: ''
  /v1/subscriptions/types/{id}:
    get:
      tags:
      - SubscriptionTypes
      - SubscriptionTypes
      operationId: SubscriptionTypes_GetSubscriptionTypeById
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionType'
        404:
          description: ''
    post:
      tags:
      - SubscriptionTypes
      - SubscriptionTypes
      operationId: SubscriptionTypes_UpdateSubscriptionType
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionType'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
    delete:
      tags:
      - SubscriptionTypes
      - SubscriptionTypes
      operationId: SubscriptionTypes_DeleteSubscriptionType
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
  /v1/subscriptions/statuses:
    get:
      tags:
      - SubscriptionStatuses
      - SubscriptionStatuses
      operationId: SubscriptionStatuses_GetSubscriptionStatuses
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfSubscriptionStatus'
    post:
      tags:
      - SubscriptionStatuses
      - SubscriptionStatuses
      operationId: SubscriptionStatuses_CreateSubscriptionStatus
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionStatus'
        required: true
        x-position: 2
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionStatus'
        404:
          description: ''
  /v1/subscriptions/statuses/{id}:
    get:
      tags:
      - SubscriptionStatuses
      - SubscriptionStatuses
      operationId: SubscriptionStatuses_GetSubscriptionStatusById
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionStatus'
        404:
          description: ''
    post:
      tags:
      - SubscriptionStatuses
      - SubscriptionStatuses
      operationId: SubscriptionStatuses_UpdateSubscriptionStatus
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionStatus'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
    delete:
      tags:
      - SubscriptionStatuses
      - SubscriptionStatuses
      operationId: SubscriptionStatuses_DeleteSubscriptionStatus
      parameters:
      - name: organizationId
        in: query
        required: true
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
  /v1/Users:
    get:
      tags:
      - Users
      operationId: Users_GetUsers
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfUser'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Users
      operationId: Users_CreateUser
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Users/UserInfo:
    get:
      tags:
      - Users
      operationId: Users_GetUserInfo
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Organizations:
    get:
      tags:
      - Organizations
      operationId: Organizations_GetOrganizations
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfOrganization'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Organizations
      operationId: Organizations_CreateOrganization
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
components:
  schemas:
    PagedResultOfOrder:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        total:
          type: integer
          format: int32
    Order:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        orderNo:
          type: integer
          format: int32
          nullable: true
        date:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/OrderType'
        parent:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ParentOrder'
        status:
          $ref: '#/components/schemas/OrderStatus'
        assigneeId:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/User'
        customer:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Customer'
        currency:
          type: string
        reference:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        subscription:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Subscription'
        schedule:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OrderSchedule'
        billingDetails:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BillingDetails'
        shippingDetails:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ShippingDetails'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        subTotal:
          type: number
          format: decimal
        vatAmounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderVatAmount'
        vatRate:
          type: number
          format: double
          nullable: true
        vat:
          type: number
          format: decimal
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderDiscount'
        discount:
          type: number
          format: decimal
          nullable: true
        total:
          type: number
          format: decimal
        created:
          type: string
          format: date-time
        createdBy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/User'
        lastModified:
          type: string
          format: date-time
          nullable: true
        lastModifiedBy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/User'
    OrderType:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    ParentOrder:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        orderNo:
          type: integer
          format: int32
          nullable: true
        date:
          type: string
          format: date-time
          nullable: true
    OrderStatus:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    User:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    Customer:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        customerNo:
          type: integer
          format: int64
        name:
          type: string
    Subscription:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        subscriptionNo:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/SubscriptionType'
        plan:
          $ref: '#/components/schemas/SubscriptionPlanShort'
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
          nullable: true
        order:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OrderShort'
        orderItemId:
          type: string
          nullable: true
        cancellationFinalizationPeriod:
          type: string
          format: duration
          nullable: true
        renewalOption:
          $ref: '#/components/schemas/RenewalOption'
        schedule:
          $ref: '#/components/schemas/SubscriptionSchedule'
    SubscriptionType:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    SubscriptionPlanShort:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
        productId:
          type: string
          nullable: true
    SubscriptionStatus:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    OrderShort:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        orderNo:
          type: integer
          format: int32
          nullable: true
        date:
          type: string
          format: date-time
          nullable: true
    RenewalOption:
      type: integer
      description: ''
      x-enumNames:
      - Manual
      - Automatic
      enum:
      - 0
      - 1
    SubscriptionSchedule:
      type: object
      additionalProperties: false
      properties:
        frequency:
          $ref: '#/components/schemas/TimeInterval'
        everyDays:
          type: integer
          format: int32
          nullable: true
        everyWeeks:
          type: integer
          format: int32
          nullable: true
        onWeekDays:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/WeekDays'
        everyMonths:
          type: integer
          format: int32
          nullable: true
        everyYears:
          type: integer
          format: int32
          nullable: true
        onDay:
          type: integer
          format: int32
          nullable: true
        onDayOfWeek:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DayOfWeek'
        inMonth:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Month'
        startTime:
          type: string
          format: time
          nullable: true
        endTime:
          type: string
          format: time
          nullable: true
        duration:
          type: string
          format: duration
          nullable: true
    TimeInterval:
      type: integer
      description: ''
      x-enumNames:
      - Daily
      - Weekly
      - Monthly
      - Quarterly
      - Yearly
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
    WeekDays:
      type: integer
      description: ''
      x-enumFlags: true
      x-enumNames:
      - None
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      enum:
      - 0
      - 1
      - 2
      - 4
      - 8
      - 16
      - 32
      - 64
    DayOfWeek:
      type: integer
      description: ''
      x-enumNames:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
    Month:
      type: integer
      description: ''
      x-enumNames:
      - January
      - February
      - March
      - April
      - May
      - June
      - July
      - August
      - September
      - October
      - November
      - December
      enum:
      - 1
      - 2
      - 4
      - 8
      - 16
      - 32
      - 64
      - 128
      - 256
      - 512
      - 1024
      - 2048
    OrderSchedule:
      type: object
      additionalProperties: false
      properties:
        plannedStartDate:
          type: string
          format: date-time
          nullable: true
        plannedEndDate:
          type: string
          format: date-time
          nullable: true
        actualStartDate:
          type: string
          format: date-time
          nullable: true
        actualEndDate:
          type: string
          format: date-time
          nullable: true
    BillingDetails:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
        lastName:
          type: string
        ssn:
          type: string
          nullable: true
        phoneNumber:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    Address:
      type: object
      additionalProperties: false
      properties:
        street:
          type: string
        city:
          type: string
        postalCode:
          type: string
        country:
          type: string
        addressLine2:
          type: string
          nullable: true
        stateOrProvince:
          type: string
          nullable: true
        careOf:
          type: string
          nullable: true
    ShippingDetails:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
        lastName:
          type: string
        careOf:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
    OrderItem:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        productType:
          $ref: '#/components/schemas/ProductType'
        description:
          type: string
        productId:
          type: string
          nullable: true
        sku:
          type: string
          nullable: true
        subscriptionPlan:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SubscriptionPlan'
        subscription:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Subscription'
        unitPrice:
          type: number
          format: decimal
        unit:
          type: string
          nullable: true
        discount:
          type: number
          format: decimal
          nullable: true
        regularPrice:
          type: number
          format: decimal
          nullable: true
        vatRate:
          type: number
          format: double
          nullable: true
        quantity:
          type: number
          format: double
        vat:
          type: number
          format: decimal
          nullable: true
        total:
          type: number
          format: decimal
        notes:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
        createdBy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/User'
        lastModified:
          type: string
          format: date-time
          nullable: true
        lastModifiedBy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/User'
    ProductType:
      type: integer
      description: ''
      x-enumNames:
      - Good
      - Service
      enum:
      - 1
      - 2
    SubscriptionPlan:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
        productId:
          type: string
          nullable: true
        schedule:
          $ref: '#/components/schemas/SubscriptionSchedule'
        hasTrial:
          type: boolean
        trialLength:
          type: string
          format: duration
        cancellationFinalizationPeriod:
          type: string
          format: duration
          nullable: true
        renewalOption:
          $ref: '#/components/schemas/RenewalOption'
    OrderVatAmount:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        vatRate:
          type: number
          format: double
        subTotal:
          type: number
          format: decimal
        vat:
          type: number
          format: decimal
          nullable: true
        total:
          type: number
          format: decimal
    OrderDiscount:
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
        rate:
          type: number
          format: double
          nullable: true
        amount:
          type: number
          format: decimal
          nullable: true
        total:
          type: number
          format: decimal
          nullable: true
        effectiveDate:
          type: string
          format: date-time
          nullable: true
        expiryDate:
          type: string
          format: date-time
          nullable: true
    SortDirection:
      type: string
      description: ''
      x-enumNames:
      - Desc
      - Asc
      enum:
      - Desc
      - Asc
    CreateOrderRequest:
      type: object
      additionalProperties: false
      properties:
        status:
          type: integer
          format: int32
          nullable: true
        customer:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SetCustomer'
        billingDetails:
          $ref: '#/components/schemas/BillingDetails'
        shippingDetails:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ShippingDetails'
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderItem'
    SetCustomer:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateOrderItem:
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
        itemId:
          type: string
          nullable: true
        subscriptionPlanId:
          type: string
          format: guid
          nullable: true
        quantity:
          type: number
          format: double
        unit:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: decimal
        regularPrice:
          type: number
          format: decimal
          nullable: true
        vatRate:
          type: number
          format: double
          nullable: true
        discount:
          type: number
          format: decimal
          nullable: true
        notes:
          type: string
          nullable: true
    CreateDraftOrderRequest:
      type: object
      additionalProperties: false
    AddOrderItemRequest:
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
        itemId:
          type: string
          nullable: true
        subscriptionPlanId:
          type: string
          format: guid
          nullable: true
        quantity:
          type: number
          format: double
        unit:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: decimal
        regularPrice:
          type: number
          format: decimal
          nullable: true
        vatRate:
          type: number
          format: double
        discount:
          type: number
          format: decimal
          nullable: true
        notes:
          type: string
          nullable: true
    UpdateOrderItemRequest:
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
        itemId:
          type: string
          nullable: true
        subscriptionPlanId:
          type: string
          format: guid
          nullable: true
        quantity:
          type: number
          format: double
        unit:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: decimal
        regularPrice:
          type: number
          format: decimal
          nullable: true
        vatRate:
          type: number
          format: double
        discount:
          type: number
          format: decimal
          nullable: true
        notes:
          type: string
          nullable: true
    UpdateOrderItemQuantityRequest:
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
        itemId:
          type: string
          nullable: true
        quantity:
          type: number
          format: double
    PagedResultOfOrderType:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderType'
        total:
          type: integer
          format: int32
    CreateOrderType:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    UpdateOrderType:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    PagedResultOfOrderStatus:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderStatus'
        total:
          type: integer
          format: int32
    CreateOrderStatus:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    UpdateOrderStatus:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    PagedResultOfSubscriptionPlan:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionPlan'
        total:
          type: integer
          format: int32
    PagedResultOfSubscription:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        total:
          type: integer
          format: int32
    CreateSubscriptionRequest:
      type: object
      additionalProperties: false
      properties:
        productId:
          type: string
        productName:
          type: string
        price:
          type: number
          format: decimal
        regularPrice:
          type: number
          format: decimal
          nullable: true
        subscriptionPlanId:
          type: string
          format: guid
        startDate:
          type: string
          format: date
        startTime:
          type: string
          format: time
          nullable: true
        endDate:
          type: string
          format: date
        endTime:
          type: string
          format: time
          nullable: true
        customer:
          $ref: '#/components/schemas/SetCustomer'
        billingDetails:
          $ref: '#/components/schemas/BillingDetails'
        shippingDetails:
          $ref: '#/components/schemas/ShippingDetails'
        notes:
          type: string
    UpdateSubscriptionStatusRequest:
      type: object
      additionalProperties: false
      properties:
        statusId:
          type: integer
          format: int32
    PagedResultOfSubscriptionType:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionType'
        total:
          type: integer
          format: int32
    CreateSubscriptionType:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    UpdateSubscriptionType:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    PagedResultOfSubscriptionStatus:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionStatus'
        total:
          type: integer
          format: int32
    CreateSubscriptionStatus:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    UpdateSubscriptionStatus:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
    PagedResultOfUser:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        total:
          type: integer
          format: int32
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    UserInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateUser:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
    PagedResultOfOrganization:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        total:
          type: integer
          format: int32
    Organization:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateOrganization:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
