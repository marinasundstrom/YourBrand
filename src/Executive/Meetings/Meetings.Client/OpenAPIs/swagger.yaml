x-generator: NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: Meetings
  version: v1
servers:
- url: https://localhost:5381
paths:
  /v1/Meetings:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetMeetings
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfMeeting'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Meetings
      operationId: Meetings_CreateMeeting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeeting'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetMeetingById
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Meetings/{id}/details:
    put:
      tags:
      - Meetings
      operationId: Meetings_EditMeetingDetails
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMeeting'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Meetings/{id}/participants:
    post:
      tags:
      - Meetings
      operationId: Meetings_AddParticipant
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMeetingParticipant'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Meetings/{id}/participants/{participantId}:
    put:
      tags:
      - Meetings
      operationId: Meetings_EditParticipant
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: participantId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMeetingParticipant'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
      - Meetings
      operationId: Meetings_RemoveParticipant
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: participantId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Users:
    get:
      tags:
      - Users
      operationId: Users_GetUsers
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfUser'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Users
      operationId: Users_CreateUser
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Users/UserInfo:
    get:
      tags:
      - Users
      operationId: Users_GetUserInfo
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Organizations:
    get:
      tags:
      - Organizations
      operationId: Organizations_GetOrganizations
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfOrganization'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Organizations
      operationId: Organizations_CreateOrganization
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
components:
  schemas:
    PagedResultOfMeeting:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Meeting'
        total:
          type: integer
          format: int32
    Meeting:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        state:
          $ref: '#/components/schemas/MeetingState'
        scheduledAt:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
        quorum:
          $ref: '#/components/schemas/MeetingQuorum'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/MeetingParticipant'
    MeetingState:
      type: integer
      description: ''
      x-enumNames:
      - Draft
      - Scheduled
      - InProgress
      - Completed
      - Cancelled
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
    MeetingQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    MeetingParticipant:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        role:
          $ref: '#/components/schemas/ParticipantRole'
        email:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        hasVotingRights:
          type: boolean
    ParticipantRole:
      type: integer
      description: ''
      x-enumNames:
      - Chairperson
      - Secretary
      - Participant
      - Observer
      enum:
      - 0
      - 1
      - 2
      - 3
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    SortDirection:
      type: string
      description: ''
      x-enumNames:
      - Ascending
      - Descending
      enum:
      - Ascending
      - Descending
    CreateMeeting:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
        scheduledAt:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
        quorum:
          $ref: '#/components/schemas/CreateMeetingQuorum'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/CreateMeetingParticipant'
    CreateMeetingQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    CreateMeetingParticipant:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          $ref: '#/components/schemas/ParticipantRole'
        hasVotingRights:
          type: boolean
    EditMeeting:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
        scheduledAt:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
        quorum:
          $ref: '#/components/schemas/EditMeetingDetailsQuorum'
    EditMeetingDetailsQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    AddMeetingParticipant:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          $ref: '#/components/schemas/ParticipantRole'
        hasVotingRights:
          type: boolean
    EditMeetingParticipant:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          $ref: '#/components/schemas/ParticipantRole'
        hasVotingRights:
          type: boolean
    PagedResultOfUser:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        total:
          type: integer
          format: int32
    User:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    UserInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateUser:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
    PagedResultOfOrganization:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        total:
          type: integer
          format: int32
    Organization:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateOrganization:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
