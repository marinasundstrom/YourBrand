x-generator: NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: Meetings
  description: ''
  version: v1
servers:
- url: https://localhost:5381
paths:
  /v1/Agenda/Items/Types:
    get:
      tags:
      - AgendaItemTypes
      operationId: AgendaItemTypes_GetAgendaItemTypes
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAgendaItemType'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/AttendeeRoles:
    get:
      tags:
      - AttendeeRoles
      operationId: AttendeeRoles_GetAttendeeRoles
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAttendeeRole'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetMeetings
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfMeeting'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
    post:
      tags:
      - Meetings
      operationId: Meetings_CreateMeeting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeeting'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetMeetingById
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Title:
    put:
      tags:
      - Meetings
      operationId: Meetings_UpdateMeetingTitle
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingTitle'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Description:
    put:
      tags:
      - Meetings
      operationId: Meetings_UpdateMeetingDescription
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingDescription'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Location:
    put:
      tags:
      - Meetings
      operationId: Meetings_UpdateMeetingLocation
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingLocation'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/ScheduledDate:
    put:
      tags:
      - Meetings
      operationId: Meetings_ChangeScheduledDate
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeMeetingScheduledDate'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Quorum:
    put:
      tags:
      - Meetings
      operationId: Meetings_ChangeMeetingQuorum
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeMeetingQuorum'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/AgendaDisplay:
    put:
      tags:
      - Meetings
      operationId: Meetings_ChangeMeetingAgendaDisplay
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeMeetingAgendaDisplay'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/State:
    put:
      tags:
      - Meetings
      operationId: Meetings_ChangeMeetingState
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeMeetingState'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Attendees:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetAttendees
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 3
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 4
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfMeetingAttendee'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
    post:
      tags:
      - Meetings
      operationId: Meetings_AddAttendee
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMeetingAttendee'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingAttendee'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Attendees/FromGroup:
    post:
      tags:
      - Meetings
      operationId: Meetings_AddAttendeesFromGroup
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAttendeesFromGroup'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Attendees/{attendeeId}:
    put:
      tags:
      - Meetings
      operationId: Meetings_EditAttendee
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: attendeeId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMeetingAttendee'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingAttendee'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
    delete:
      tags:
      - Meetings
      operationId: Meetings_RemoveAttendee
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: attendeeId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Attendees/{attendeeId}/IsPresent:
    put:
      tags:
      - Meetings
      operationId: Meetings_MarkAttendeeAsPresent
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: attendeeId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkAttendeeAsPresent'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingAttendee'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Start:
    post:
      tags:
      - Meetings
      operationId: Meetings_StartMeeting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Adjourn:
    post:
      tags:
      - Meetings
      operationId: Meetings_AdjournMeeting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjournMeeting'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Resume:
    post:
      tags:
      - Meetings
      operationId: Meetings_ResumeMeeting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetMeetingAgenda
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/NextItem:
    post:
      tags:
      - Meetings
      operationId: Meetings_MoveToNextAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/Item/Complete:
    post:
      tags:
      - Meetings
      operationId: Meetings_CompleteAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/Item/Postpone:
    post:
      tags:
      - Meetings
      operationId: Meetings_PostponeAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/Item/Cancel:
    post:
      tags:
      - Meetings
      operationId: Meetings_CancelAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/Item:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetCurrentAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Cancel:
    post:
      tags:
      - Meetings
      operationId: Meetings_CancelMeeting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/End:
    post:
      tags:
      - Meetings
      operationId: Meetings_EndMeeting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/MemberRoles:
    get:
      tags:
      - MemberRoles
      operationId: MemberRoles_GetMemberRoles
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfMemberRole'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Users:
    get:
      tags:
      - Users
      operationId: Users_GetUsers
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfUser'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Users
      operationId: Users_CreateUser
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Users/UserInfo:
    get:
      tags:
      - Users
      operationId: Users_GetUserInfo
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Meetings/{id}/Voting:
    get:
      tags:
      - Voting
      operationId: Voting_GetVoting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Elections:
    get:
      tags:
      - Elections
      operationId: Elections_GetElection
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Election'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Discussions:
    get:
      tags:
      - Discussions
      operationId: Discussions_GetDiscussion
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discussion'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Discussions/Start:
    post:
      tags:
      - Chairman
      operationId: Chairman_StartDiscussion
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Discussions/End:
    post:
      tags:
      - Chairman
      operationId: Chairman_EndDiscussion
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Elections/Start:
    post:
      tags:
      - Chairman
      operationId: Chairman_StartElection
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Elections/End:
    post:
      tags:
      - Chairman
      operationId: Chairman_EndElection
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Procedure/Reset:
    post:
      tags:
      - Chairman
      operationId: Chairman_ResetMeetingProcedure
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Voting/Start:
    post:
      tags:
      - Chairman
      operationId: Chairman_StartVoting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Voting/End:
    post:
      tags:
      - Chairman
      operationId: Chairman_EndVoting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Discussions/Speakers/RequestSpeakerTime:
    post:
      tags:
      - Attendee
      operationId: Attendee_RequestSpeakerTime
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSpeakerTime'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Discussions/Speakers/RevokeSpeakerTime:
    post:
      tags:
      - Attendee
      operationId: Attendee_RevokeSpeakerTime
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSpeakerTime'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      default:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Discussions/SpeakingTime:
    post:
      tags:
      - Chairman
      operationId: Chairman_SetDiscussionSpeakingTime
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDiscussionSpeakingTime'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Discussions/Speakers/ExtendSpeakerTime:
    post:
      tags:
      - Chairman
      operationId: Chairman_ExtendSpeakerTime
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendSpeakerTime'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Elections/CastBallot:
    post:
      tags:
      - Attendee
      operationId: Attendee_CastBallot
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CastBallot'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Elections/Candidate:
    post:
      tags:
      - Attendee
      operationId: Attendee_NominateCandidate
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposeCandidate'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
    delete:
      tags:
      - Attendee
      operationId: Attendee_WithdrawCandidacy
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawCandidature'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Voting/CastVote:
    post:
      tags:
      - Attendee
      operationId: Attendee_CastVote
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CastVote'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Organizations:
    get:
      tags:
      - Organizations
      operationId: Organizations_GetOrganizations
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfOrganization'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Organizations
      operationId: Organizations_CreateOrganization
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Motions:
    get:
      tags:
      - Motions
      operationId: Motions_GetMotions
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: meetingId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 3
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 4
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfMotion'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Motions
      operationId: Motions_CreateMotion
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMotion'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motion'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Motions/{id}:
    get:
      tags:
      - Motions
      operationId: Motions_GetMotionById
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motion'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Motions/{id}/details:
    put:
      tags:
      - Motions
      operationId: Motions_EditMotionDetails
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMotion'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motion'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Motions/{id}/status:
    put:
      tags:
      - Motions
      operationId: Motions_ChangeMotionStatus
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeMotionStatus'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motion'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Motions/{id}/OperativeClauses:
    post:
      tags:
      - Motions
      operationId: Motions_AddOperativeClause
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOperativeClause'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MotionOperativeClause'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Motions/{id}/OperativeClauses/{clauseId}:
    put:
      tags:
      - Motions
      operationId: Motions_EditOperativeClause
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: clauseId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditOperativeClause'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MotionOperativeClause'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
      - Motions
      operationId: Motions_RemoveOperativeClause
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: clauseId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Minutes:
    get:
      tags:
      - Minutes
      operationId: Minutes_GetMinutes
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: meetingId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 3
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 4
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfMinutes'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Minutes
      operationId: Minutes_CreateMinutes
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMinutes'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minutes'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Minutes/{id}:
    get:
      tags:
      - Minutes
      operationId: Minutes_GetMinutesById
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minutes'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Minutes/{id}/details:
    put:
      tags:
      - Minutes
      operationId: Minutes_EditMinutesDetails
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMinuteDetails'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minutes'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Minutes/{id}/items:
    post:
      tags:
      - Minutes
      operationId: Minutes_AddMinutesItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMinutesItem'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinutesItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Minutes/{id}/items/{itemId}:
    put:
      tags:
      - Minutes
      operationId: Minutes_EditMinutesItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMinutesItem'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinutesItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
      - Minutes
      operationId: Minutes_RemoveMinutesItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Minutes/{id}/items/{itemId}/order:
    put:
      tags:
      - Minutes
      operationId: Minutes_MoveMinutesItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveMinutesItem'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinutesItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/MeetingGroups:
    get:
      tags:
      - MeetingGroups
      operationId: MeetingGroups_GetMeetingGroups
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfMeetingGroup'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
    post:
      tags:
      - MeetingGroups
      operationId: MeetingGroups_CreateMeetingGroup
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeetingGroup'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingGroup'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/MeetingGroups/{id}:
    get:
      tags:
      - MeetingGroups
      operationId: MeetingGroups_GetMeetingGroupById
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingGroup'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/MeetingGroups/{id}/title:
    put:
      tags:
      - MeetingGroups
      operationId: MeetingGroups_UpdateMeetingGroupTitle
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingGroupTitle'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingGroup'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/MeetingGroups/{id}/description:
    put:
      tags:
      - MeetingGroups
      operationId: MeetingGroups_UpdateMeetingGroupDescription
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingGroupDescription'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingGroup'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/MeetingGroups/{id}/quorum:
    put:
      tags:
      - MeetingGroups
      operationId: MeetingGroups_ChangeMeetingGroupQuorum
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeMeetingGroupQuorum'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingGroup'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/MeetingGroups/{id}/members:
    post:
      tags:
      - MeetingGroups
      operationId: MeetingGroups_AddMember
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMeetingGroupMember'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingGroupMember'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/MeetingGroups/{id}/members/{memberId}:
    put:
      tags:
      - MeetingGroups
      operationId: MeetingGroups_EditMember
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: memberId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMeetingGroupMember'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingGroupMember'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
    delete:
      tags:
      - MeetingGroups
      operationId: MeetingGroups_RemoveMember
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: memberId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/MeetingGroups/{id}/members/{memberId}/order:
    put:
      tags:
      - MeetingGroups
      operationId: MeetingGroups_ReorderMember
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: memberId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderMeetingGroupMember'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingGroupMember'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Agendas:
    get:
      tags:
      - Agendas
      operationId: Agendas_GetAgendas
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: meetingId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 3
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 4
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAgenda'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Agendas
      operationId: Agendas_CreateAgenda
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: meetingId
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgenda'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Agendas/{id}:
    get:
      tags:
      - Agendas
      operationId: Agendas_GetAgendaById
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Agendas/{id}/details:
    put:
      tags:
      - Agendas
      operationId: Agendas_EditAgendaDetails
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAgendaDetails'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Agendas/{id}/items:
    post:
      tags:
      - Agendas
      operationId: Agendas_AddAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAgendaItem'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Agendas/{id}/items/{itemId}:
    put:
      tags:
      - Agendas
      operationId: Agendas_EditAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAgendaItem'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
      - Agendas
      operationId: Agendas_RemoveAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Agendas/{id}/items/{itemId}/order:
    put:
      tags:
      - Agendas
      operationId: Agendas_ReorderAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderAgendaItem'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    PagedResultOfAgendaItemType:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AgendaItemType'
        total:
          type: integer
          format: int32
    AgendaItemType:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
          nullable: true
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    SortDirection:
      type: string
      description: ''
      x-enumNames:
      - Ascending
      - Descending
      enum:
      - Ascending
      - Descending
    PagedResultOfAttendeeRole:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AttendeeRole'
        total:
          type: integer
          format: int32
    AttendeeRole:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
          nullable: true
    PagedResultOfMeeting:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Meeting'
        total:
          type: integer
          format: int32
    Meeting:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
          nullable: true
        state:
          $ref: '#/components/schemas/MeetingState'
        scheduledAt:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
        adjournmentMessage:
          type: string
          nullable: true
        adjournedAt:
          type: string
          format: date-time
          nullable: true
        quorum:
          $ref: '#/components/schemas/MeetingQuorum'
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/MeetingAttendee'
        currentAgendaItemIndex:
          type: integer
          format: int32
          nullable: true
        currentAgendaSubItemIndex:
          type: integer
          format: int32
          nullable: true
        showAgendaTimeEstimates:
          type: boolean
        actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Action'
    MeetingState:
      type: integer
      description: ''
      x-enumNames:
      - Draft
      - Scheduled
      - InProgress
      - Adjourned
      - Completed
      - Canceled
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
    MeetingQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    MeetingAttendee:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        role:
          $ref: '#/components/schemas/AttendeeRole'
        email:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        hasSpeakingRights:
          type: boolean
          nullable: true
        hasVotingRights:
          type: boolean
          nullable: true
        isPresent:
          type: boolean
    Action:
      type: object
      additionalProperties: false
      properties:
        method:
          type: string
        href:
          type: string
    CreateMeeting:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
        description:
          type: string
        scheduledAt:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
        quorum:
          $ref: '#/components/schemas/CreateMeetingQuorum'
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/CreateMeetingAttendee'
    CreateMeetingQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    CreateMeetingAttendee:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          type: integer
          format: int32
        hasSpeakingRights:
          type: boolean
          nullable: true
        hasVotingRights:
          type: boolean
          nullable: true
    UpdateMeetingTitle:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
    UpdateMeetingDescription:
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
    UpdateMeetingLocation:
      type: object
      additionalProperties: false
      properties:
        location:
          type: string
    ChangeMeetingScheduledDate:
      type: object
      additionalProperties: false
      properties:
        date:
          type: string
          format: date-time
    ChangeMeetingQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    ChangeMeetingAgendaDisplay:
      type: object
      additionalProperties: false
      properties:
        showAgendaTimeEstimates:
          type: boolean
    ChangeMeetingState:
      type: object
      additionalProperties: false
      properties:
        state:
          $ref: '#/components/schemas/MeetingState'
    AdjournMeeting:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
      required:
      - message
    PagedResultOfMeetingAttendee:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MeetingAttendee'
        total:
          type: integer
          format: int32
    AddMeetingAttendee:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          type: integer
          format: int32
        hasSpeakingRights:
          type: boolean
          nullable: true
        hasVotingRights:
          type: boolean
          nullable: true
    AddAttendeesFromGroup:
      type: object
      additionalProperties: false
      properties:
        groupId:
          type: integer
          format: int32
    EditMeetingAttendee:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          type: integer
          format: int32
        hasSpeakingRights:
          type: boolean
          nullable: true
        hasVotingRights:
          type: boolean
          nullable: true
    MarkAttendeeAsPresent:
      type: object
      additionalProperties: false
      properties:
        isPresent:
          type: boolean
    Agenda:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        state:
          $ref: '#/components/schemas/AgendaState'
        items:
          type: array
          items:
            $ref: '#/components/schemas/AgendaItem'
    AgendaState:
      type: integer
      description: ''
      x-enumNames:
      - InDraft
      - Finalized
      - Published
      enum:
      - 0
      - 1
      - 2
    AgendaItem:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        parentId:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/AgendaItemType'
        title:
          type: string
        state:
          $ref: '#/components/schemas/AgendaItemState'
        description:
          type: string
        isMandatory:
          type: boolean
        discussionActions:
          $ref: '#/components/schemas/DiscussionActions'
        voteActions:
          $ref: '#/components/schemas/VoteActions'
        estimatedStartTime:
          type: string
          format: duration
          nullable: true
        estimatedEndTime:
          type: string
          format: duration
          nullable: true
        estimatedDuration:
          type: string
          format: duration
          nullable: true
        isDiscussionCompleted:
          type: boolean
        isVoteCompleted:
          type: boolean
        motionId:
          type: integer
          format: int32
          nullable: true
        subItems:
          type: array
          items:
            $ref: '#/components/schemas/AgendaItem'
        discussion:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Discussion'
        voting:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Voting'
        election:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Election'
    AgendaItemState:
      type: integer
      description: ''
      x-enumNames:
      - Pending
      - UnderDiscussion
      - Voting
      - Completed
      - Postponed
      - Skipped
      - Canceled
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
    DiscussionActions:
      type: integer
      description: ''
      x-enumNames:
      - None
      - Required
      - Optional
      enum:
      - 0
      - 1
      - 2
    VoteActions:
      type: integer
      description: ''
      x-enumNames:
      - None
      - Required
      - Optional
      enum:
      - 0
      - 1
      - 2
    Discussion:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/DiscussionState'
        speakingTimeLimitSeconds:
          type: integer
          format: int32
          nullable: true
        speakerQueue:
          type: array
          items:
            $ref: '#/components/schemas/SpeakerRequest'
        currentSpeaker:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SpeakerRequest'
        currentSpeakerClock:
          nullable: true
          $ref: '#/components/schemas/SpeakerClock'
    DiscussionState:
      type: integer
      description: ''
      x-enumNames:
      - NotStarted
      - InProgress
      - Paused
      - Completed
      enum:
      - 0
      - 1
      - 2
      - 3
    SpeakerRequest:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        attendeeId:
          type: string
        allocatedSpeakingTimeSeconds:
          type: integer
          format: int32
          nullable: true
        hasExtendedSpeakingTime:
          type: boolean
    SpeakerClock:
      type: object
      additionalProperties: false
      properties:
        isRunning:
          type: boolean
        elapsedSeconds:
          type: integer
          format: int32
        startedAtUtc:
          type: string
          format: date-time
          nullable: true
    Voting:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/VotingState'
        hasPassed:
          type: boolean
    VotingState:
      type: integer
      description: ''
      x-enumNames:
      - NotStarted
      - Voting
      - Completed
      - ResultReady
      - RedoRequired
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
    Election:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/ElectionState'
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/ElectionCandidate'
        electedCandidate:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ElectionCandidate'
    ElectionState:
      type: integer
      description: ''
      x-enumNames:
      - NotStarted
      - Voting
      - Completed
      - ResultReady
      - RedoRequired
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
    ElectionCandidate:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        attendeeId:
          type: string
          nullable: true
        statement:
          type: string
          nullable: true
    PagedResultOfMemberRole:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MemberRole'
        total:
          type: integer
          format: int32
    MemberRole:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
          nullable: true
    PagedResultOfUser:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        total:
          type: integer
          format: int32
    User:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    UserInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateUser:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
    RequestSpeakerTime:
      type: object
      additionalProperties: false
      properties:
        agendaItemId:
          type: string
    RevokeSpeakerTime:
      type: object
      additionalProperties: false
      properties:
        agendaItemId:
          type: string
    SetDiscussionSpeakingTime:
      type: object
      additionalProperties: false
      properties:
        agendaItemId:
          type: string
        speakingTimeLimitSeconds:
          type: integer
          format: int32
          nullable: true
      required:
      - agendaItemId
    ExtendSpeakerTime:
      type: object
      additionalProperties: false
      properties:
        agendaItemId:
          type: string
        speakerRequestId:
          type: string
        additionalSeconds:
          type: integer
          format: int32
      required:
      - agendaItemId
      - speakerRequestId
      - additionalSeconds
    CastBallot:
      type: object
      additionalProperties: false
      properties:
        candidateId:
          type: string
    ProposeCandidate:
      type: object
      additionalProperties: false
      properties:
        attendeeId:
          type: string
        statement:
          type: string
          nullable: true
    WithdrawCandidature:
      type: object
      additionalProperties: false
      properties:
        candidateId:
          type: string
    CastVote:
      type: object
      additionalProperties: false
      properties:
        option:
          $ref: '#/components/schemas/VoteOption'
    VoteOption:
      type: integer
      description: ''
      x-enumNames:
      - For
      - Against
      - Abstain
      enum:
      - 0
      - 1
      - 2
    PagedResultOfOrganization:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        total:
          type: integer
          format: int32
    Organization:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateOrganization:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
    PagedResultOfMotion:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Motion'
        total:
          type: integer
          format: int32
    Motion:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        status:
          $ref: '#/components/schemas/MotionStatus'
        text:
          type: string
        operativeClauses:
          type: array
          items:
            $ref: '#/components/schemas/MotionOperativeClause'
    MotionStatus:
      type: integer
      description: ''
      x-enumNames:
      - Proposal
      - Adopted
      - Rejected
      - Amended
      enum:
      - 0
      - 1
      - 2
      - 3
    MotionOperativeClause:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        order:
          type: integer
          format: int32
        action:
          $ref: '#/components/schemas/OperativeAction'
        text:
          type: string
    OperativeAction:
      type: integer
      description: ''
      x-enumNames:
      - Decides
      - Requests
      - Recommends
      - Instructs
      - Urges
      - Encourages
      - Authorizes
      - CallsFor
      - Acknowledges
      - Endorses
      - Adopts
      - Amends
      - Rejects
      - Elects
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
    CreateMotion:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
        text:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateOperativeClause'
    CreateOperativeClause:
      type: object
      additionalProperties: false
      properties:
        action:
          $ref: '#/components/schemas/OperativeAction'
        text:
          type: string
    EditMotion:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
        text:
          type: string
    ChangeMotionStatus:
      type: object
      additionalProperties: false
      properties:
        status:
          $ref: '#/components/schemas/MotionStatus'
    AddOperativeClause:
      type: object
      additionalProperties: false
      properties:
        action:
          $ref: '#/components/schemas/OperativeAction'
        text:
          type: string
    EditOperativeClause:
      type: object
      additionalProperties: false
      properties:
        action:
          $ref: '#/components/schemas/OperativeAction'
        text:
          type: string
    PagedResultOfMinutes:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Minutes'
        total:
          type: integer
          format: int32
    Minutes:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        meetingId:
          type: integer
          format: int32
        state:
          $ref: '#/components/schemas/MinutesState'
        items:
          type: array
          items:
            $ref: '#/components/schemas/MinutesItem'
    MinutesState:
      type: integer
      description: ''
      x-enumNames:
      - Draft
      - UnderReview
      - Approved
      enum:
      - 0
      - 1
      - 2
    MinutesItem:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        order:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/AgendaItemType'
        agendaId:
          type: integer
          format: int32
        agendaItemId:
          type: string
        title:
          type: string
        state:
          $ref: '#/components/schemas/MinutesItemState'
        description:
          type: string
        motionId:
          type: integer
          format: int32
          nullable: true
    MinutesItemState:
      type: integer
      description: ''
      x-enumNames:
      - Created
      - Reviewing
      - Approved
      enum:
      - 0
      - 1
      - 2
    CreateMinutes:
      type: object
      additionalProperties: false
      properties:
        meetingId:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateMinutesItem'
    CreateMinutesItem:
      type: object
      additionalProperties: false
      properties:
        agendaId:
          type: integer
          format: int32
          nullable: true
        agendaItemId:
          type: string
          nullable: true
        type:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
    EditMinuteDetails:
      type: object
      additionalProperties: false
    AddMinutesItem:
      type: object
      additionalProperties: false
      properties:
        agendaId:
          type: integer
          format: int32
          nullable: true
        agendaItemId:
          type: string
          nullable: true
        type:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        motionId:
          type: integer
          format: int32
          nullable: true
        order:
          type: integer
          format: int32
          nullable: true
    EditMinutesItem:
      type: object
      additionalProperties: false
      properties:
        type:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        motionId:
          type: integer
          format: int32
          nullable: true
    MoveMinutesItem:
      type: object
      additionalProperties: false
      properties:
        order:
          type: integer
          format: int32
    PagedResultOfMeetingGroup:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MeetingGroup'
        total:
          type: integer
          format: int32
    MeetingGroup:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        quorum:
          $ref: '#/components/schemas/MeetingGroupQuorum'
        members:
          type: array
          items:
            $ref: '#/components/schemas/MeetingGroupMember'
    MeetingGroupQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    MeetingGroupMember:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        order:
          type: integer
          format: int32
        name:
          type: string
        role:
          $ref: '#/components/schemas/AttendeeRole'
        email:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        hasSpeakingRights:
          type: boolean
          nullable: true
        hasVotingRights:
          type: boolean
          nullable: true
    CreateMeetingGroup:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
        description:
          type: string
        quorum:
          $ref: '#/components/schemas/CreateMeetingGroupQuorum'
        members:
          type: array
          items:
            $ref: '#/components/schemas/CreateMeetingGroupMember'
    CreateMeetingGroupQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    CreateMeetingGroupMember:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          type: integer
          format: int32
        hasSpeakingRights:
          type: boolean
          nullable: true
        hasVotingRights:
          type: boolean
          nullable: true
    UpdateMeetingGroupTitle:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
    UpdateMeetingGroupDescription:
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
    ChangeMeetingGroupQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    AddMeetingGroupMember:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          type: integer
          format: int32
        hasSpeakingRights:
          type: boolean
          nullable: true
        hasVotingRights:
          type: boolean
          nullable: true
    EditMeetingGroupMember:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          type: integer
          format: int32
        hasSpeakingRights:
          type: boolean
          nullable: true
        hasVotingRights:
          type: boolean
          nullable: true
    ReorderMeetingGroupMember:
      type: object
      additionalProperties: false
      properties:
        order:
          type: integer
          format: int32
    PagedResultOfAgenda:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Agenda'
        total:
          type: integer
          format: int32
    CreateAgenda:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateAgendaItem'
    CreateAgendaItem:
      type: object
      additionalProperties: false
      properties:
        type:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        estimatedStartTime:
          type: string
          format: duration
          nullable: true
        estimatedEndTime:
          type: string
          format: duration
          nullable: true
        estimatedDuration:
          type: string
          format: duration
          nullable: true
    EditAgendaDetails:
      type: object
      additionalProperties: false
    AddAgendaItem:
      type: object
      additionalProperties: false
      properties:
        type:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        motionId:
          type: integer
          format: int32
          nullable: true
        order:
          type: integer
          format: int32
          nullable: true
        estimatedStartTime:
          type: string
          format: duration
          nullable: true
        estimatedEndTime:
          type: string
          format: duration
          nullable: true
        estimatedDuration:
          type: string
          format: duration
          nullable: true
    EditAgendaItem:
      type: object
      additionalProperties: false
      properties:
        type:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        motionId:
          type: integer
          format: int32
          nullable: true
        estimatedStartTime:
          type: string
          format: duration
          nullable: true
        estimatedEndTime:
          type: string
          format: duration
          nullable: true
        estimatedDuration:
          type: string
          format: duration
          nullable: true
    ReorderAgendaItem:
      type: object
      additionalProperties: false
      properties:
        order:
          type: integer
          format: int32
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
