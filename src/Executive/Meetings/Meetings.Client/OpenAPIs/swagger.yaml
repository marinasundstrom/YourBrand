x-generator: NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: Meetings
  version: v1
servers:
- url: https://localhost:5381
paths:
  /v1/Meetings:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetMeetings
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfMeeting'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
    post:
      tags:
      - Meetings
      operationId: Meetings_CreateMeeting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeeting'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetMeetingById
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/title:
    put:
      tags:
      - Meetings
      operationId: Meetings_UpdateMeetingTitle
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingTitle'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/description:
    put:
      tags:
      - Meetings
      operationId: Meetings_UpdateMeetingDescription
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingDescription'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/location:
    put:
      tags:
      - Meetings
      operationId: Meetings_UpdateMeetingLocation
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingLocation'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/scheduledDate:
    put:
      tags:
      - Meetings
      operationId: Meetings_ChangeScheduledDate
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeMeetingScheduledDate'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/quorum:
    put:
      tags:
      - Meetings
      operationId: Meetings_ChangeMeetingQuorum
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeMeetingQuorum'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/state:
    put:
      tags:
      - Meetings
      operationId: Meetings_ChangeMeetingState
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeMeetingState'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/participants:
    post:
      tags:
      - Meetings
      operationId: Meetings_AddParticipant
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMeetingParticipant'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingParticipant'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/participants/{participantId}:
    put:
      tags:
      - Meetings
      operationId: Meetings_EditParticipant
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: participantId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMeetingParticipant'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingParticipant'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
    delete:
      tags:
      - Meetings
      operationId: Meetings_RemoveParticipant
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: participantId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/participants/{participantId}/IsPresent:
    put:
      tags:
      - Meetings
      operationId: Meetings_MarkParticipantAsPresent
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: participantId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkParticipantAsPresent'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingParticipant'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Start:
    post:
      tags:
      - Meetings
      operationId: Meetings_StartMeeting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetMeetingAgenda
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/NextItem:
    post:
      tags:
      - Meetings
      operationId: Meetings_MoveToNextAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/Item/Complete:
    post:
      tags:
      - Meetings
      operationId: Meetings_CompleteAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/Item/Postpone:
    post:
      tags:
      - Meetings
      operationId: Meetings_PostponeAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/Item/Cancel:
    post:
      tags:
      - Meetings
      operationId: Meetings_CancelAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/Item:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetCurrentAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/StartDiscussion:
    post:
      tags:
      - Meetings
      operationId: Meetings_StartAgendaItemDiscussion
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Agenda/StartVoting:
    post:
      tags:
      - Meetings
      operationId: Meetings_StartAgendaItemVoting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/End:
    post:
      tags:
      - Meetings
      operationId: Meetings_EndMeeting
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/Procedure/Reset:
    post:
      tags:
      - Meetings
      operationId: Meetings_ResetMeetingProcedure
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/speakers:
    get:
      tags:
      - Meetings
      operationId: Meetings_GetSpeakerSession
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeakerSession'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/speakers/request:
    post:
      tags:
      - Meetings
      operationId: Meetings_RequestSpeakerTime
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSpeakerTime'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Meetings/{id}/speakers/revoke:
    post:
      tags:
      - Meetings
      operationId: Meetings_RevokeSpeakerTime
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSpeakerTime'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Users:
    get:
      tags:
      - Users
      operationId: Users_GetUsers
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfUser'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Users
      operationId: Users_CreateUser
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Users/UserInfo:
    get:
      tags:
      - Users
      operationId: Users_GetUserInfo
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Organizations:
    get:
      tags:
      - Organizations
      operationId: Organizations_GetOrganizations
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfOrganization'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Organizations
      operationId: Organizations_CreateOrganization
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Motions:
    get:
      tags:
      - Motions
      operationId: Motions_GetMotions
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: meetingId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 3
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 4
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfMotion'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Motions
      operationId: Motions_CreateMotion
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMotion'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motion'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Motions/{id}:
    get:
      tags:
      - Motions
      operationId: Motions_GetMotionById
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motion'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Motions/{id}/details:
    put:
      tags:
      - Motions
      operationId: Motions_EditMotionDetails
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMotion'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motion'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Motions/{id}/status:
    put:
      tags:
      - Motions
      operationId: Motions_ChangeMotionStatus
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeMotionStatus'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motion'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Motions/{id}/OperativeClauses:
    post:
      tags:
      - Motions
      operationId: Motions_AddOperativeClause
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOperativeClause'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MotionOperativeClause'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Motions/{id}/OperativeClauses/{clauseId}:
    put:
      tags:
      - Motions
      operationId: Motions_EditOperativeClause
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: clauseId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditOperativeClause'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MotionOperativeClause'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
      - Motions
      operationId: Motions_RemoveOperativeClause
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: clauseId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Minutes:
    get:
      tags:
      - Minutes
      operationId: Minutes_GetMinutes
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: meetingId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 3
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 4
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfMinutes'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Minutes
      operationId: Minutes_CreateMinutes
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMinutes'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minutes'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Minutes/{id}:
    get:
      tags:
      - Minutes
      operationId: Minutes_GetMinutesById
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minutes'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Minutes/{id}/details:
    put:
      tags:
      - Minutes
      operationId: Minutes_EditMinutesDetails
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMinuteDetails'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minutes'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Minutes/{id}/items:
    post:
      tags:
      - Minutes
      operationId: Minutes_AddMinutesItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMinutesItem'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinutesItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Minutes/{id}/items/{itemId}:
    put:
      tags:
      - Minutes
      operationId: Minutes_EditMinutesItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMinutesItem'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinutesItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
      - Minutes
      operationId: Minutes_RemoveMinutesItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Minutes/{id}/items/{itemId}/order:
    put:
      tags:
      - Minutes
      operationId: Minutes_MoveMinutesItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveMinutesItem'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinutesItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Agendas:
    get:
      tags:
      - Agendas
      operationId: Agendas_GetAgendas
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: meetingId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 3
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 4
      - name: searchTerm
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 7
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAgenda'
        429:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Agendas
      operationId: Agendas_CreateAgenda
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: meetingId
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgenda'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/Agendas/{id}:
    get:
      tags:
      - Agendas
      operationId: Agendas_GetAgendaById
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Agendas/{id}/details:
    put:
      tags:
      - Agendas
      operationId: Agendas_EditAgendaDetails
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAgendaDetails'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Agendas/{id}/items:
    post:
      tags:
      - Agendas
      operationId: Agendas_AddAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAgendaItem'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Agendas/{id}/items/{itemId}:
    put:
      tags:
      - Agendas
      operationId: Agendas_EditAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAgendaItem'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
      - Agendas
      operationId: Agendas_RemoveAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /v1/Agendas/{id}/items/{itemId}/order:
    put:
      tags:
      - Agendas
      operationId: Agendas_MoveAgendaItem
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: itemId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveAgendaItem'
        required: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaItem'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    PagedResultOfMeeting:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Meeting'
        total:
          type: integer
          format: int32
    Meeting:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        state:
          $ref: '#/components/schemas/MeetingState'
        scheduledAt:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
        quorum:
          $ref: '#/components/schemas/MeetingQuorum'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/MeetingParticipant'
        currentAgendaItemIndex:
          type: integer
          format: int32
          nullable: true
    MeetingState:
      type: integer
      description: ''
      x-enumNames:
      - Draft
      - Scheduled
      - InProgress
      - Completed
      - Cancelled
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
    MeetingQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    MeetingParticipant:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        role:
          $ref: '#/components/schemas/ParticipantRole'
        email:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        hasVotingRights:
          type: boolean
        isPresent:
          type: boolean
    ParticipantRole:
      type: integer
      description: ''
      x-enumNames:
      - Chairperson
      - Secretary
      - Participant
      - Observer
      enum:
      - 0
      - 1
      - 2
      - 3
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    SortDirection:
      type: string
      description: ''
      x-enumNames:
      - Ascending
      - Descending
      enum:
      - Ascending
      - Descending
    CreateMeeting:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
        description:
          type: string
        scheduledAt:
          type: string
          format: date-time
          nullable: true
        location:
          type: string
        quorum:
          $ref: '#/components/schemas/CreateMeetingQuorum'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/CreateMeetingParticipant'
    CreateMeetingQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    CreateMeetingParticipant:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          $ref: '#/components/schemas/ParticipantRole'
        hasVotingRights:
          type: boolean
    UpdateMeetingTitle:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
    UpdateMeetingDescription:
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
    UpdateMeetingLocation:
      type: object
      additionalProperties: false
      properties:
        location:
          type: string
    ChangeMeetingScheduledDate:
      type: object
      additionalProperties: false
      properties:
        date:
          type: string
          format: date-time
    ChangeMeetingQuorum:
      type: object
      additionalProperties: false
      properties:
        requiredNumber:
          type: integer
          format: int32
    ChangeMeetingState:
      type: object
      additionalProperties: false
      properties:
        state:
          $ref: '#/components/schemas/MeetingState'
    AddMeetingParticipant:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          $ref: '#/components/schemas/ParticipantRole'
        hasVotingRights:
          type: boolean
    EditMeetingParticipant:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        userId:
          type: string
          nullable: true
        email:
          type: string
        role:
          $ref: '#/components/schemas/ParticipantRole'
        hasVotingRights:
          type: boolean
    MarkParticipantAsPresent:
      type: object
      additionalProperties: false
      properties:
        isPresent:
          type: boolean
    Agenda:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        state:
          $ref: '#/components/schemas/AgendaState'
        items:
          type: array
          items:
            $ref: '#/components/schemas/AgendaItem'
    AgendaState:
      type: integer
      description: ''
      x-enumNames:
      - Drafting
      - Reviewing
      - Approved
      - Distributed
      - InProgress
      - Completed
      - FollowUp
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
    AgendaItem:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        order:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/AgendaItemType'
        title:
          type: string
        state:
          $ref: '#/components/schemas/AgendaItemState'
        description:
          type: string
        motionId:
          type: integer
          format: int32
          nullable: true
    AgendaItemType:
      type: integer
      description: ''
      x-enumNames:
      - CallToOrder
      - RollCall
      - ApprovalOfMinutes
      - ApprovalOfAgenda
      - ChairpersonRemarks
      - PublicComment
      - Reports
      - SpecialPresentations
      - OldBusiness
      - NewBusiness
      - Announcements
      - Motion
      - Discussion
      - Voting
      - Election
      - ExecutiveSession
      - Adjournment
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
    AgendaItemState:
      type: integer
      description: ''
      x-enumNames:
      - Pending
      - UnderDiscussion
      - Voting
      - Completed
      - Postponed
      - Cancelled
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
    SpeakerSession:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        speakerQueue:
          type: array
          items:
            $ref: '#/components/schemas/SpeakerRequest'
    SpeakerRequest:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        participantId:
          type: string
    RequestSpeakerTime:
      type: object
      additionalProperties: false
      properties:
        agendaItemId:
          type: string
    RevokeSpeakerTime:
      type: object
      additionalProperties: false
      properties:
        agendaItemId:
          type: string
    PagedResultOfUser:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        total:
          type: integer
          format: int32
    User:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    UserInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateUser:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
    PagedResultOfOrganization:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        total:
          type: integer
          format: int32
    Organization:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateOrganization:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
    PagedResultOfMotion:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Motion'
        total:
          type: integer
          format: int32
    Motion:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        status:
          $ref: '#/components/schemas/MotionStatus'
        text:
          type: string
        operativeClauses:
          type: array
          items:
            $ref: '#/components/schemas/MotionOperativeClause'
    MotionStatus:
      type: integer
      description: ''
      x-enumNames:
      - Proposed
      enum:
      - 0
    MotionOperativeClause:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        order:
          type: integer
          format: int32
        action:
          $ref: '#/components/schemas/OperativeAction'
        text:
          type: string
    OperativeAction:
      type: integer
      description: ''
      x-enumNames:
      - Decides
      - Requests
      - Recommends
      - Instructs
      - Urges
      - Encourages
      - Authorizes
      - CallsFor
      - Acknowledges
      - Endorses
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
    CreateMotion:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
        text:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateOperativeClause'
    CreateOperativeClause:
      type: object
      additionalProperties: false
      properties:
        action:
          $ref: '#/components/schemas/OperativeAction'
        text:
          type: string
    EditMotion:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
        text:
          type: string
    ChangeMotionStatus:
      type: object
      additionalProperties: false
      properties:
        status:
          $ref: '#/components/schemas/MotionStatus'
    AddOperativeClause:
      type: object
      additionalProperties: false
      properties:
        action:
          $ref: '#/components/schemas/OperativeAction'
        text:
          type: string
    EditOperativeClause:
      type: object
      additionalProperties: false
      properties:
        action:
          $ref: '#/components/schemas/OperativeAction'
        text:
          type: string
    PagedResultOfMinutes:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Minutes'
        total:
          type: integer
          format: int32
    Minutes:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        meetingId:
          type: integer
          format: int32
        state:
          $ref: '#/components/schemas/MinutesState'
        items:
          type: array
          items:
            $ref: '#/components/schemas/MinutesItem'
    MinutesState:
      type: integer
      description: ''
      x-enumNames:
      - Drafting
      - Reviewing
      - Approved
      enum:
      - 0
      - 1
      - 2
    MinutesItem:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        order:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/MinutesItemType'
        agendaId:
          type: integer
          format: int32
        agendaItemId:
          type: string
        title:
          type: string
        state:
          $ref: '#/components/schemas/MinutesItemState'
        description:
          type: string
        motionId:
          type: integer
          format: int32
          nullable: true
    MinutesItemType:
      type: integer
      description: ''
      x-enumNames:
      - Default
      enum:
      - 0
    MinutesItemState:
      type: integer
      description: ''
      x-enumNames:
      - Created
      - Reviewing
      - Approved
      enum:
      - 0
      - 1
      - 2
    CreateMinutes:
      type: object
      additionalProperties: false
      properties:
        meetingId:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateMinutesItem'
    CreateMinutesItem:
      type: object
      additionalProperties: false
      properties:
        agendaId:
          type: integer
          format: int32
        agendaItemId:
          type: string
        type:
          $ref: '#/components/schemas/MinutesItemType'
        title:
          type: string
        description:
          type: string
    EditMinuteDetails:
      type: object
      additionalProperties: false
    AddMinutesItem:
      type: object
      additionalProperties: false
      properties:
        agendaId:
          type: integer
          format: int32
        agendaItemId:
          type: string
        type:
          $ref: '#/components/schemas/MinutesItemType'
        title:
          type: string
        description:
          type: string
        motionId:
          type: integer
          format: int32
          nullable: true
        order:
          type: integer
          format: int32
          nullable: true
    EditMinutesItem:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/MinutesItemType'
        title:
          type: string
        description:
          type: string
        motionId:
          type: integer
          format: int32
          nullable: true
    MoveMinutesItem:
      type: object
      additionalProperties: false
      properties:
        order:
          type: integer
          format: int32
    PagedResultOfAgenda:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Agenda'
        total:
          type: integer
          format: int32
    CreateAgenda:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateAgendaItem'
    CreateAgendaItem:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/AgendaItemType'
        title:
          type: string
        description:
          type: string
    EditAgendaDetails:
      type: object
      additionalProperties: false
    AddAgendaItem:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/AgendaItemType'
        title:
          type: string
        description:
          type: string
        motionId:
          type: integer
          format: int32
          nullable: true
        order:
          type: integer
          format: int32
          nullable: true
    EditAgendaItem:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/AgendaItemType'
        title:
          type: string
        description:
          type: string
        motionId:
          type: integer
          format: int32
          nullable: true
    MoveAgendaItem:
      type: object
      additionalProperties: false
      properties:
        order:
          type: integer
          format: int32
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
