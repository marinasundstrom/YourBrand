@using System.ComponentModel.DataAnnotations
@inject IMinutesClient MinutesClient
@inject ISnackbar Snackbar

<EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudDialog Gutters="false">
        <DialogContent>
            <MudContainer Style="max-height: 500px; overflow-y: scroll">
                <AgendaItemTypeSelector OrganizationId="OrganizationId" Class="mt-4" Label="Type"
                    Variant="Variant.Outlined" @bind-Value="Model.Type" For="() => Model.Type" />
                <MudTextField Label="Title" Variant="Variant.Outlined" Class="mt-4" @bind-Value="Model.Title"
                    For="@(() => Model.Title)" />
                <MudTextField Label="Description" Variant="Variant.Outlined" Class="mt-4"
                    @bind-Value="Model.Description" For="@(() => Model.Description)" Lines="5" />
            </MudContainer>
        </DialogContent>

        <DialogActions>
            <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="() => Dialog.Cancel()">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Text" Color="Color.Primary">
                Create
            </MudButton>
        </DialogActions>
    </MudDialog>

</EditForm>

@code
{
    EditContext context = null!;

    [CascadingParameter]
    public MudDialogInstance Dialog { get; set; } = null!;

    [Parameter]
    public string? OrganizationId { get; set; } = null!;

    [Required]
    public MinutesItemViewModel Model { get; set; } = new MinutesItemViewModel();

    protected override void OnInitialized()
    {

    }

    public void OnValidSubmit()
    {
        Dialog.Close(Model.Clone());
    }
}