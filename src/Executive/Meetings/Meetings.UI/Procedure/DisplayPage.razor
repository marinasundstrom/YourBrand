@page "/meetings/{MeetingId:int}/procedure"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.SignalR.Client
@using YourBrand.Portal.Services
@using YourBrand.Meetings
@attribute [Authorize]
@inject IStringLocalizer<DisplayPage> T
@inject IMeetingsClient MeetingsClient
@inject IAgendasClient AgendasClient
@inject IMotionsClient MotionsClient
@inject NavigationManager NavigationManager
@inject IOrganizationProvider OrganizationProvider
@inject YourBrand.Portal.Services.IAccessTokenProvider AccessTokenProvider
@inject IUserContext UserContext
@inject ISnackbar Snackbar
@implements IDisposable
@implements IMeetingsProcedureHubClient

@if (meeting == null)
{
    <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
}
else
{
    <AppPageTitle>@meeting?.Title</AppPageTitle>

    <MudGrid class="mb-4">
        <MudItem xs="12" md="8">
            <MudPaper Class="pa-8 mb-4" Elevation="25">
                <MudText Typo="@Typo.h2" GutterBottom="true">@meeting?.Title</MudText>

                @if (meeting.State == MeetingState.Draft)
                {
                    <MudText Typo="@Typo.body1" GutterBottom="true">Meeting is in draft state</MudText>
                }
                else if (meeting.State == MeetingState.Scheduled)
                {
                    <MudText Typo="@Typo.body1" GutterBottom="true">Waiting for the meeting start</MudText>
                }
                else if (meeting.State == MeetingState.InProgress)
                {
                    @if (agendaItem is not null)
                    {
                        <MudText Typo="@Typo.h4" GutterBottom="true">@agendaItem?.Order. @agendaItem?.Title</MudText>

                        <MudText Typo="@Typo.body1" GutterBottom="true">@agendaItem.State</MudText>
                    }
                }
                else if (meeting.State == MeetingState.Completed)
                {
                    <MudText Typo="@Typo.body1" GutterBottom="true">Meeting has concluded</MudText>
                }
                else if (meeting.State == MeetingState.Cancelled)
                {
                    <MudText Typo="@Typo.body1" GutterBottom="true">Meeting is canceled</MudText>
                }
            </MudPaper>

            @if (currentMotion is not null)
            {
                <MudPaper Class="pa-8 mb-4" Elevation="25">
                    <MotionDisplay Motion="@currentMotion" />
                </MudPaper>
            }

        </MudItem>

        <MudItem xs="12" md="4">
            @if(agenda is not null) 
            {
            <MudPaper Class="pa-8 mb-4" Elevation="25">
                <MudText Typo="@Typo.h4" GutterBottom="true">Agenda</MudText>

                <AgendaDisplay Agenda="@agenda" AgendaItemId="@agendaItem?.Id" />
            </MudPaper>
            }
        </MudItem>
    </MudGrid>

    @if (@agendaItem?.State == AgendaItemState.UnderDiscussion) 
    {
        <MudPaper Class="pa-8 mb-4" Elevation="25">
            <MudText Typo="@Typo.h4" GutterBottom="true">Discussion</MudText>

            <MudText Typo="@Typo.h6" GutterBottom="true">Speaker Queue</MudText>

            <ul>
                @foreach (var speakerRequest in speakerQueue)
                {
                    <li @key="speakerRequest.Id">
                    @if (speakerRequest.Id == currentSpeaker.Id)
                    {
                        <MudText Typo="@Typo.body1" Class="mb-2"><b>@speakerRequest.ParticipantId</b></MudText>
                    }
                    else
                    {
                        <MudText Typo="@Typo.body1" Class="mb-2">@speakerRequest.ParticipantId</MudText>
                    }
                    </li>
                }
            </ul>

        </MudPaper>
    } 
    else if (@agendaItem?.State == AgendaItemState.Voting) 
    {
        <MudPaper Class="pa-8 mb-4" Elevation="25">
            <MudText Typo="@Typo.h4" GutterBottom="true">Voting</MudText>


        </MudPaper>
    }

}
