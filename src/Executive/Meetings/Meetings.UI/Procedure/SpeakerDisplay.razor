@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.SignalR.Client
@using YourBrand.Portal.Services
@using YourBrand.Meetings
@attribute [Authorize]
@inject IStringLocalizer<DisplayPage> T
@inject IMeetingsClient MeetingsClient
@inject IAgendasClient AgendasClient
@inject IMotionsClient MotionsClient
@inject IDiscussionsClient DiscussionsClient
@inject NavigationManager NavigationManager
@inject IOrganizationProvider OrganizationProvider
@inject YourBrand.Portal.Services.IAccessTokenProvider AccessTokenProvider
@inject IUserContext UserContext
@inject ISnackbar Snackbar
@implements IDisposable
@implements IDiscussionsHubClient

<MudGrid>
    <MudItem xs="12" sm="6">

        <MudText Typo="@Typo.h6" GutterBottom="true" Class="mt-4">Now</MudText>

        @if (CurrentSpeaker is not null)
        {
            <MudText Typo="@Typo.body1" GutterBottom="true">@CurrentSpeaker.Name</MudText>
            <MudText Typo="@Typo.caption" GutterBottom="true">Allocated time: @FormatDuration(CurrentSpeaker.AllocatedSpeakingTimeSeconds)</MudText>
            <MudText Typo="@Typo.h3" Class="mb-1">@GetRemainingTimeDisplay()</MudText>
            @if (!string.IsNullOrWhiteSpace(GetClockStatusDisplay()))
            {
                <MudText Typo="@Typo.caption" GutterBottom="true">@GetClockStatusDisplay()</MudText>
            }
            @if (CurrentSpeaker.HasExtendedSpeakingTime)
            {
                <MudChip T="string" Color="Color.Primary" Variant="Variant.Outlined" Class="mb-2">Extended</MudChip>
            }
        }
        else
        {
            <MudText Typo="@Typo.body1" GutterBottom="true"><i>No speaker</i></MudText>
        }

        <MudText Typo="@Typo.caption" GutterBottom="true">Default speaking time: @FormatDuration(speakingTimeLimitSeconds)</MudText>

    </MudItem>

    <MudItem xs="12" sm="6">

        <MudText Typo="@Typo.h6" GutterBottom="true" Class="mt-4">Speakers' queue</MudText>

        <ul>
            @foreach (var speakerRequest in speakerQueue)
            {
                <li @key="speakerRequest.Id">
                    @if (speakerRequest.Id == CurrentSpeaker?.Id)
                    {
                        <MudText Typo="@Typo.body1" Class="mb-2"><b>@speakerRequest.Name</b> (@FormatDuration(speakerRequest.AllocatedSpeakingTimeSeconds))</MudText>
                    }
                    else
                    {
                        <MudText Typo="@Typo.body1" Class="mb-2">@speakerRequest.Name (@FormatDuration(speakerRequest.AllocatedSpeakingTimeSeconds))</MudText>
                    }
                    @if (speakerRequest.HasExtendedSpeakingTime)
                    {
                        <MudChip T="string" Color="Color.Primary" Variant="Variant.Outlined" Dense="true" Class="mb-2">Extended</MudChip>
                    }
                </li>
            }
        </ul>

    </MudItem>
</MudGrid>