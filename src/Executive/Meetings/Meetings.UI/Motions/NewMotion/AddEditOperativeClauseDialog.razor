@using System.ComponentModel.DataAnnotations
@inject IMotionsClient MotionsClient
@inject ISnackbar Snackbar

<EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudDialog DisableSidePadding="true">
        <DialogContent>
            <MudContainer Style="max-height: 500px; overflow-y: scroll">
                <MudSelect T="OperativeAction" Label="Action" Variant="Variant.Outlined" @bind-Value="Model.Action"
                    Class="mt-4">
                    @foreach (var type in Enum.GetValues<OperativeAction>())
                    {
                        <MudSelectItem T="OperativeAction" Value="@type">@Enum.GetName(typeof(OperativeAction), type)
                        </MudSelectItem>
                    }
                </MudSelect>
                <MudTextField Label="Text" Variant="Variant.Outlined" Class="mt-4" @bind-Value="Model.Text"
                    For="@(() => Model.Text)" />
            </MudContainer>
        </DialogContent>

        <DialogActions>
            <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="() => Dialog.Cancel()">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Text" Color="Color.Primary">
                Update
            </MudButton>
        </DialogActions>
    </MudDialog>

</EditForm>

@code
{
    [CascadingParameter]
    public MudDialogInstance Dialog { get; set; } = null!;

    [Parameter]
    public string? OrganizationId { get; set; } = null!;

    [Parameter]
    public AddEditOperativeClauseViewModel? Model { get; set; }

    protected override void OnInitialized()
    {
        if(Model is null) 
        {
            Model = new AddEditOperativeClauseViewModel();
        }
    }

    public void OnValidSubmit()
    {
        Dialog.Close(Model);
    }
}