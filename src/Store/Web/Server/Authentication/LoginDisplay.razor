@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authentication
@implements IDisposable

@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <li class="nav-item col-12 col-md-auto">
            <a class="nav-link" href="@PageRoutes.Profile"><i class="bi bi-person"></i> <span
                    class="d-lg-none">Profile</span></a>
        </li>

        <li class="nav-item col-12 col-md-auto">
            <a href="@PageRoutes.Logout" class="nav-link">
                <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
            </a>
        </li>
    </Authorized>
    <NotAuthorized>
        <li class="nav-item col-12 col-md-auto">
            <a class="nav-link special-button" href="@PageRoutes.Register">Register</a>
        </li>

        <li class="nav-item col-12 col-md-auto">
            <a class="nav-link" href="@PageRoutes.Login">Log in</a>
        </li>
    </NotAuthorized>
</AuthorizeView>



@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}