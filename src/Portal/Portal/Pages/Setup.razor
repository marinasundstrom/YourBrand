@page "/setup"
@layout OutsideLayout
@using System.ComponentModel.DataAnnotations
@using YourBrand.AppService.Client
@inject NavigationManager NavigationManager
@inject ISetupClient SetupClient
@inject ISnackbar Snackbar

<AppPageTitle>Set up</AppPageTitle>

<MudText Typo="Typo.h3" GutterBottom="true" Align="Align.Center" Class="mb-8">Set up</MudText>

<MudContainer Class="mt-16" MaxWidth="MaxWidth.ExtraSmall">
    <MudCard Elevation="25">
        <MudCardContent>
            <EditForm Model="@this" OnValidSubmit="OnSubmit">
                <MudTextField Label="Organization" Class="mb-6" HelperText="The name of your organization" @bind-Value="OrganizationName" Variant="Variant.Outlined"  For="() => OrganizationName" />

                <MudText Typo="Typo.h4" GutterBottom="true" Class="mb-8">Administrator account</MudText>

                <MudTextField Label="Email" Class="mb-6" Variant="Variant.Outlined" @bind-Value="Email" For="() => Email" />

                <MudTextField Class="mb-6" InputType="InputType.Password" Label="New password" @bind-Value="Password" Variant="Variant.Outlined" For="() => Password" />

                <MudTextField Class="mb-6" InputType="InputType.Password" Label="Repeat new password" @bind-Value="RepeatPassword" Variant="Variant.Outlined" For="() => RepeatPassword" />

                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Create</MudButton>
            
            </EditForm>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    protected override void OnInitialized()
    {
#if DEBUG
        OrganizationName  = "My company";
        Email = "admin@email.com";
        Password = "Abc123!?";
        RepeatPassword = "Abc123!?";
#endif
    }

    [Required]
    public string OrganizationName { get; set; }

    [Required]
    [EmailAddress]
    public string Email { get; set; }

    [Required]
    public string Password { get; set; }

    [Required]
    [Compare(nameof(Password))]
    public string RepeatPassword { get; set; }

    async Task OnSubmit()
    {
        try
        {
            await SetupClient.SetupAsync(new SetupRequest
            {
                OrganizationName = OrganizationName,
                Email = Email,
                Password = Password
            });

            NavigationManager.NavigateTo("/authentication/login");
        }
        catch (Exception exception)
        {
            Snackbar.Add(exception.ToString(), Severity.Error);

            //exception.Redirect();
        }
    }
}