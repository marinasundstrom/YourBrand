x-generator: NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: HumanResources
  description: ''
  version: v1
servers:
- url: https://localhost:5110
paths:
  /Organizations:
    get:
      tags:
      - Organizations
      operationId: Organizations_GetOrganizations
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfOrganization'
      security:
      - JWT: []
    post:
      tags:
      - Organizations
      operationId: Organizations_CreateOrganization
      requestBody:
        x-name: createOrganizationDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - JWT: []
  /Organizations/{id}:
    get:
      tags:
      - Organizations
      operationId: Organizations_GetOrganization
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - JWT: []
    delete:
      tags:
      - Organizations
      operationId: Organizations_DeleteOrganization
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /Organizations/{id}/Details:
    put:
      tags:
      - Organizations
      operationId: Organizations_UpdateOrganization
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: updateOrganizationDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganization'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - JWT: []
  /Persons:
    get:
      tags:
      - Persons
      operationId: Persons_GetPersons
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfPerson'
      security:
      - JWT: []
    post:
      tags:
      - Persons
      operationId: Persons_CreatePerson
      requestBody:
        x-name: createPersonDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePerson'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
      security:
      - JWT: []
  /Persons/{id}:
    get:
      tags:
      - Persons
      operationId: Persons_GetPerson
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
      security:
      - JWT: []
    delete:
      tags:
      - Persons
      operationId: Persons_DeletePerson
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /Persons/{id}/Roles:
    get:
      tags:
      - Persons
      operationId: Persons_GetPersonRoles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfRole'
      security:
      - JWT: []
  /Persons/{id}/Details:
    put:
      tags:
      - Persons
      operationId: Persons_UpdatePerson
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: updatePersonDetailsDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePersonDetails'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
      security:
      - JWT: []
  /Persons/{id}/Role:
    post:
      tags:
      - Persons
      operationId: Persons_UpdateRole
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: updatePersonRoleDtoDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePersonRole'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /Roles:
    get:
      tags:
      - Roles
      operationId: Roles_GetRoles
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfRole'
      security:
      - JWT: []
  /Sync:
    post:
      tags:
      - Sync
      operationId: Sync_SyncData
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /Teams:
    get:
      tags:
      - Teams
      operationId: Teams_GetTeams
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfTeam'
      security:
      - JWT: []
    post:
      tags:
      - Teams
      operationId: Teams_CreateTeam
      requestBody:
        x-name: createTeamDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeam'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
      security:
      - JWT: []
  /Teams/{id}:
    get:
      tags:
      - Teams
      operationId: Teams_GetTeam
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
      security:
      - JWT: []
    put:
      tags:
      - Teams
      operationId: Teams_UpdateTeam
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: updateTeamDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeam'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
      security:
      - JWT: []
    delete:
      tags:
      - Teams
      operationId: Teams_DeleteTeam
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /Teams/{id}/Members:
    post:
      tags:
      - Teams
      operationId: Teams_AddMember
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMember'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /Teams/{id}/Members/{personId}:
    delete:
      tags:
      - Teams
      operationId: Teams_RemoveMember
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      - name: personId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /Teams/{id}/Memberships:
    get:
      tags:
      - Teams
      operationId: Teams_GetMemberships
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          oneOf:
          - nullable: true
            oneOf:
            - $ref: '#/components/schemas/SortDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResultOfTeamMembership'
      security:
      - JWT: []
components:
  schemas:
    ItemsResultOfOrganization:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        totalItems:
          type: integer
          format: int32
    Organization:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        friendlyName:
          type: string
          nullable: true
    SortDirection:
      type: string
      description: ''
      x-enumNames:
      - Desc
      - Asc
      enum:
      - Desc
      - Asc
    CreateOrganization:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        friendlyName:
          type: string
          nullable: true
    UpdateOrganization:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
    ItemsResultOfPerson:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        totalItems:
          type: integer
          format: int32
    Person:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        organization:
          $ref: '#/components/schemas/Organization'
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
          nullable: true
        title:
          type: string
        role:
          type: string
        ssn:
          type: string
        email:
          type: string
        department:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Department'
        reportsTo:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Person2'
        created:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
          nullable: true
    Department:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    Person2:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        organization:
          $ref: '#/components/schemas/Organization'
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
          nullable: true
        title:
          type: string
        department:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Department'
    ItemsResultOfRole:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        totalItems:
          type: integer
          format: int32
    Role:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreatePerson:
      type: object
      additionalProperties: false
      properties:
        organizationId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
          nullable: true
        title:
          type: string
        role:
          type: string
        ssn:
          type: string
        email:
          type: string
        reportsTo:
          type: string
          nullable: true
        password:
          type: string
    UpdatePersonDetails:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
          nullable: true
        title:
          type: string
        ssn:
          type: string
        email:
          type: string
        reportsTo:
          type: string
          nullable: true
    UpdatePersonRole:
      type: object
      additionalProperties: false
      properties:
        role:
          type: string
    ItemsResultOfTeam:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Team'
        totalItems:
          type: integer
          format: int32
    Team:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
          nullable: true
    CreateTeam:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
        organizationId:
          type: string
    UpdateTeam:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
    AddMember:
      type: object
      additionalProperties: false
      properties:
        personId:
          type: string
    ItemsResultOfTeamMembership:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TeamMembership'
        totalItems:
          type: integer
          format: int32
    TeamMembership:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        team:
          $ref: '#/components/schemas/Team'
        person:
          $ref: '#/components/schemas/Person'
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
