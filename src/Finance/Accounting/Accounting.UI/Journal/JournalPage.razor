@page "/journal"
@using YourBrand.Accounting
@inject NavigationManager NavigationManager
@inject IJournalEntriesClient JournalEntriesClient
@inject IDialogService DialogService
@inject ISnackbar Snackbar

<AppPageTitle>Journal</AppPageTitle>

<MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true" Class="mt-4 mb-8">Journal</MudText>

<MudButton StartIcon="@Icons.Material.Outlined.Add" Link="/journal/new" Variant="Variant.Filled" Color="Color.Primary" Class="mb-2">
    Create entry
</MudButton>

<MudButton StartIcon="@Icons.Material.Outlined.Add" Link="/journal/sale" Variant="Variant.Filled" Color="Color.Primary" Class="mb-2">
    Register sale
</MudButton>

<MudTable @ref="table" ServerData="ServerReload" Hover="true" Elevation="25" Breakpoint="Breakpoint.Sm"
    Loading="@loading" LoadingProgressColor="Color.Info">
    <ToolBarContent>
        <MudSpacer />
        <MudNumericField T="int?" Immediate="true" DebounceInterval="400" ValueChanged="@(s=>OnSearch(s))" Placeholder="Invoice No" Adornment="Adornment.Start"
            AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudNumericField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Date</MudTh>
        <MudTh>Description</MudTh>
        @*
        <MudTh>Debit</MudTh>
        <MudTh>Credit</MudTh>
        *@
        <MudTh>Amount</MudTh>
    </HeaderContent>
    <RowTemplate Context="ledgerEntry">
        <MudTd DataLabel="Id">
            <MudLink Href="@($"/ledger?journalEntryId={ledgerEntry.Id}")">@ledgerEntry.Id</MudLink>
        </MudTd>
        <MudTd DataLabel="Date">@ledgerEntry.Date.ToString("g")</MudTd>
        <MudTd DataLabel="Description">@ledgerEntry.Description</MudTd>
        @*
        <MudTd DataLabel="Debit">@ledgerEntry.Debit.FormatCurrency(currency)</MudTd>
        <MudTd DataLabel="Credit">@ledgerEntry.Credit.FormatCurrency(currency)</MudTd>
        *@
        <MudTd DataLabel="Amount">@Amount(ledgerEntry).FormatCurrency(currency)</MudTd>
    </RowTemplate>
    <LoadingContent>
        <MudText>Loading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code
{
    string currency = "SEK";

    bool loading = false;
    private int? invoiceNo = null;
    private MudTable<JournalEntry> table;

    [CascadingParameter(Name = "Organization")]
    public YourBrand.Portal.Services.Organization? Organization { get; set; }

    private void OnSearch(int? value)
    {
        invoiceNo = value;
        table.ReloadServerData();
    }

    private async Task<TableData<JournalEntry>> ServerReload(TableState state)
    {
        loading = true;

        try
        {
            var result = await JournalEntriesClient.GetJournalEntriesAsync(Organization.Id, state.Page, state.PageSize, invoiceNo);

            return new TableData<JournalEntry>() { TotalItems = result.TotalItems, Items = result.Verifications };
        }
        finally
        {
            loading = false;
        }
    }

    private async Task OpenNewJournalEntryDialog()
    {
        /*
        var dialogReference = DialogService.Show<NewJournalEntryDialog>("New JournalEntry");

        var result = await dialogReference.Result;

        if (result.Cancelled) return;

        Snackbar.Add("The reactor is running at optimum temperature", Severity.Success);
        */

        NavigationManager.NavigateTo("/journal/new");
    }

    class JournalEntryViewModel
    {
        public int JournalEntryId { get; set; }

        public DateTime Date { get; set; }

        public string Description { get; set; } = null!;

        public decimal Debit { get; set; }

        public decimal Credit { get; set; }
    }

    public static decimal Amount(JournalEntry journalEntry) 
    {
        /*
        var liablity = journalEntry.Entries.FirstOrDefault(x => x.Account.Class.Id == 2);

        if(liablity is not null) 
        {
            if (liablity.Credit is not null) 
            {
                return -liablity.Credit.GetValueOrDefault();
            }
        }
        */

        return journalEntry.Debit;
    }
}