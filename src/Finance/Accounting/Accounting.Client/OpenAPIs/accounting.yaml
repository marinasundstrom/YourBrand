x-generator: NSwag v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: Accounting
  version: v1
servers:
- url: https://localhost:5092
paths:
  /v1/Accounts:
    get:
      tags:
      - Accounts
      operationId: Accounts_GetAccounts
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: accountClass
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: includeBlankAccounts
        in: query
        schema:
          type: boolean
          default: true
        x-position: 3
      - name: includeUnusedAccounts
        in: query
        schema:
          type: boolean
          default: false
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
      security:
      - JWT: []
    post:
      tags:
      - Accounts
      operationId: Accounts_CreateAccounts
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
      security:
      - JWT: []
  /v1/Accounts/{accountNo}:
    get:
      tags:
      - Accounts
      operationId: Accounts_GetAccount
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: accountNo
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      security:
      - JWT: []
  /v1/Accounts/Classes:
    get:
      tags:
      - Accounts
      operationId: Accounts_GetAccountClasses
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountClass'
      security:
      - JWT: []
  /v1/Accounts/Classes/Summary:
    get:
      tags:
      - Accounts
      operationId: Accounts_GetAccountClassSummary
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: accountNo
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountClassSummary'
      security:
      - JWT: []
  /v1/Accounts/History:
    get:
      tags:
      - Accounts
      operationId: Accounts_GetAccountHistory
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: accountNo
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalanceHistory'
      security:
      - JWT: []
  /v1/JournalEntries:
    get:
      tags:
      - JournalEntries
      operationId: JournalEntries_GetJournalEntries
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: invoiceNo
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryResult'
      security:
      - JWT: []
    post:
      tags:
      - JournalEntries
      operationId: JournalEntries_CreateJournalEntry
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJournalEntry'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - JWT: []
  /v1/JournalEntries/{id}:
    get:
      tags:
      - JournalEntries
      operationId: JournalEntries_GetJournalEntry
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntry'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/JournalEntries/{id}/Verifications:
    post:
      tags:
      - JournalEntries
      operationId: JournalEntries_AddFileToJournalEntryAsVerification
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: description
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: invoiceId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: string
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - JWT: []
  /v1/LedgerEntries:
    get:
      tags:
      - LedgerEntries
      operationId: LedgerEntries_GetLedgerEntries
      parameters:
      - name: organizationId
        in: query
        schema:
          type: string
        x-position: 1
      - name: accountNo
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: journalEntryId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 3
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 4
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 5
      - name: direction
        in: query
        schema:
          default: Asc
          oneOf:
          - $ref: '#/components/schemas/ResultDirection'
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerEntriesResult'
      security:
      - JWT: []
components:
  schemas:
    Account:
      type: object
      additionalProperties: false
      properties:
        accountNo:
          type: integer
          format: int32
        class:
          $ref: '#/components/schemas/AccountClass'
        name:
          type: string
        description:
          type: string
        balance:
          type: number
          format: decimal
    AccountClass:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
    AccountClassSummary:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        balance:
          type: number
          format: decimal
    AccountBalanceHistory:
      type: object
      additionalProperties: false
      properties:
        labels:
          type: array
          items:
            type: string
        series:
          type: array
          items:
            $ref: '#/components/schemas/AccountSeries'
    AccountSeries:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        data:
          type: array
          items:
            type: number
            format: decimal
    JournalEntryResult:
      type: object
      additionalProperties: false
      properties:
        verifications:
          type: array
          items:
            $ref: '#/components/schemas/JournalEntry'
        totalItems:
          type: integer
          format: int32
    JournalEntry:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        description:
          type: string
        debit:
          type: number
          format: decimal
        credit:
          type: number
          format: decimal
        invoiceNo:
          type: integer
          format: int32
          nullable: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/LedgerEntry'
        verifications:
          type: array
          items:
            $ref: '#/components/schemas/Verification'
    LedgerEntry:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        verification:
          $ref: '#/components/schemas/JournalEntryShort'
        account:
          $ref: '#/components/schemas/AccountShort'
        description:
          type: string
        debit:
          type: number
          format: decimal
          nullable: true
        credit:
          type: number
          format: decimal
          nullable: true
    JournalEntryShort:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        description:
          type: string
    AccountShort:
      type: object
      additionalProperties: false
      properties:
        accountNo:
          type: integer
          format: int32
        class:
          $ref: '#/components/schemas/AccountClass'
        name:
          type: string
    Verification:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        contentType:
          type: string
        description:
          type: string
          nullable: true
        invoiceNo:
          type: integer
          format: int32
          nullable: true
        url:
          type: string
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    CreateJournalEntry:
      type: object
      additionalProperties: false
      required:
      - entries
      properties:
        description:
          type: string
        invoiceNo:
          type: integer
          format: int32
          nullable: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CreateEntry'
    CreateEntry:
      type: object
      additionalProperties: false
      required:
      - accountNo
      properties:
        accountNo:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        debit:
          type: number
          format: decimal
          nullable: true
        credit:
          type: number
          format: decimal
          nullable: true
    LedgerEntriesResult:
      type: object
      additionalProperties: false
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/LedgerEntry'
        totalItems:
          type: integer
          format: int32
    ResultDirection:
      type: string
      description: ''
      x-enumNames:
      - Desc
      - Asc
      enum:
      - Desc
      - Asc
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
